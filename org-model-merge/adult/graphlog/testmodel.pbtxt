node {
  name: "debiased_classifier/Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 18
        }
      }
    }
  }
}
node {
  name: "debiased_classifier/Placeholder_1"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "debiased_classifier/Placeholder_2"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "debiased_classifier/Placeholder_3"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/random_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\022\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/random_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/random_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "debiased_classifier/classifier_model/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/random_normal/mul"
  op: "Mul"
  input: "debiased_classifier/classifier_model/random_normal/RandomStandardNormal"
  input: "debiased_classifier/classifier_model/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/random_normal"
  op: "Add"
  input: "debiased_classifier/classifier_model/random_normal/mul"
  input: "debiased_classifier/classifier_model/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/Square"
  op: "Square"
  input: "debiased_classifier/classifier_model/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/Sum"
  op: "Sum"
  input: "debiased_classifier/classifier_model/Square"
  input: "debiased_classifier/classifier_model/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/add/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/add"
  op: "AddV2"
  input: "debiased_classifier/classifier_model/add/x"
  input: "debiased_classifier/classifier_model/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/Sqrt"
  op: "Sqrt"
  input: "debiased_classifier/classifier_model/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/truediv"
  op: "RealDiv"
  input: "debiased_classifier/classifier_model/random_normal"
  input: "debiased_classifier/classifier_model/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/linear/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 18
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/linear/kernel/Assign"
  op: "Assign"
  input: "debiased_classifier/classifier_model/linear/kernel"
  input: "debiased_classifier/classifier_model/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/linear/kernel/read"
  op: "Identity"
  input: "debiased_classifier/classifier_model/linear/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear/kernel"
      }
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/linear/bias/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        tensor_content
      }
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/linear/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/linear/bias/Assign"
  op: "Assign"
  input: "debiased_classifier/classifier_model/linear/bias"
  input: "debiased_classifier/classifier_model/linear/bias/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/linear/bias/read"
  op: "Identity"
  input: "debiased_classifier/classifier_model/linear/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear/bias"
      }
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/random_normal_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/random_normal_1/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/random_normal_1/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/random_normal_1/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "debiased_classifier/classifier_model/random_normal_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/random_normal_1/mul"
  op: "Mul"
  input: "debiased_classifier/classifier_model/random_normal_1/RandomStandardNormal"
  input: "debiased_classifier/classifier_model/random_normal_1/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/random_normal_1"
  op: "Add"
  input: "debiased_classifier/classifier_model/random_normal_1/mul"
  input: "debiased_classifier/classifier_model/random_normal_1/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/Square_1"
  op: "Square"
  input: "debiased_classifier/classifier_model/random_normal_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/Sum_1/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/Sum_1"
  op: "Sum"
  input: "debiased_classifier/classifier_model/Square_1"
  input: "debiased_classifier/classifier_model/Sum_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/add_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/add_1"
  op: "AddV2"
  input: "debiased_classifier/classifier_model/add_1/x"
  input: "debiased_classifier/classifier_model/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/Sqrt_1"
  op: "Sqrt"
  input: "debiased_classifier/classifier_model/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/truediv_1"
  op: "RealDiv"
  input: "debiased_classifier/classifier_model/random_normal_1"
  input: "debiased_classifier/classifier_model/Sqrt_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/linear_1/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/linear_1/kernel/Assign"
  op: "Assign"
  input: "debiased_classifier/classifier_model/linear_1/kernel"
  input: "debiased_classifier/classifier_model/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/linear_1/kernel/read"
  op: "Identity"
  input: "debiased_classifier/classifier_model/linear_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_1/kernel"
      }
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/linear_1/bias/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        tensor_content
      }
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/linear_1/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/linear_1/bias/Assign"
  op: "Assign"
  input: "debiased_classifier/classifier_model/linear_1/bias"
  input: "debiased_classifier/classifier_model/linear_1/bias/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/linear_1/bias/read"
  op: "Identity"
  input: "debiased_classifier/classifier_model/linear_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_1/bias"
      }
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/random_normal_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/random_normal_2/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/random_normal_2/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/random_normal_2/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "debiased_classifier/classifier_model/random_normal_2/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/random_normal_2/mul"
  op: "Mul"
  input: "debiased_classifier/classifier_model/random_normal_2/RandomStandardNormal"
  input: "debiased_classifier/classifier_model/random_normal_2/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/random_normal_2"
  op: "Add"
  input: "debiased_classifier/classifier_model/random_normal_2/mul"
  input: "debiased_classifier/classifier_model/random_normal_2/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/Square_2"
  op: "Square"
  input: "debiased_classifier/classifier_model/random_normal_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/Sum_2/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/Sum_2"
  op: "Sum"
  input: "debiased_classifier/classifier_model/Square_2"
  input: "debiased_classifier/classifier_model/Sum_2/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/add_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/add_2"
  op: "AddV2"
  input: "debiased_classifier/classifier_model/add_2/x"
  input: "debiased_classifier/classifier_model/Sum_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/Sqrt_2"
  op: "Sqrt"
  input: "debiased_classifier/classifier_model/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/truediv_2"
  op: "RealDiv"
  input: "debiased_classifier/classifier_model/random_normal_2"
  input: "debiased_classifier/classifier_model/Sqrt_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/linear_2/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/linear_2/kernel/Assign"
  op: "Assign"
  input: "debiased_classifier/classifier_model/linear_2/kernel"
  input: "debiased_classifier/classifier_model/truediv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/linear_2/kernel/read"
  op: "Identity"
  input: "debiased_classifier/classifier_model/linear_2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_2/kernel"
      }
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/linear_2/bias/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/linear_2/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/linear_2/bias/Assign"
  op: "Assign"
  input: "debiased_classifier/classifier_model/linear_2/bias"
  input: "debiased_classifier/classifier_model/linear_2/bias/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/linear_2/bias/read"
  op: "Identity"
  input: "debiased_classifier/classifier_model/linear_2/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_2/bias"
      }
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/random_normal_3/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\020\000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/random_normal_3/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/random_normal_3/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/random_normal_3/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "debiased_classifier/classifier_model/random_normal_3/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/random_normal_3/mul"
  op: "Mul"
  input: "debiased_classifier/classifier_model/random_normal_3/RandomStandardNormal"
  input: "debiased_classifier/classifier_model/random_normal_3/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/random_normal_3"
  op: "Add"
  input: "debiased_classifier/classifier_model/random_normal_3/mul"
  input: "debiased_classifier/classifier_model/random_normal_3/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/Square_3"
  op: "Square"
  input: "debiased_classifier/classifier_model/random_normal_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/Sum_3/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/Sum_3"
  op: "Sum"
  input: "debiased_classifier/classifier_model/Square_3"
  input: "debiased_classifier/classifier_model/Sum_3/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/add_3/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/add_3"
  op: "AddV2"
  input: "debiased_classifier/classifier_model/add_3/x"
  input: "debiased_classifier/classifier_model/Sum_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/Sqrt_3"
  op: "Sqrt"
  input: "debiased_classifier/classifier_model/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/truediv_3"
  op: "RealDiv"
  input: "debiased_classifier/classifier_model/random_normal_3"
  input: "debiased_classifier/classifier_model/Sqrt_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/linear_3/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/linear_3/kernel/Assign"
  op: "Assign"
  input: "debiased_classifier/classifier_model/linear_3/kernel"
  input: "debiased_classifier/classifier_model/truediv_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/linear_3/kernel/read"
  op: "Identity"
  input: "debiased_classifier/classifier_model/linear_3/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_3/kernel"
      }
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/linear_3/bias/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/linear_3/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/linear_3/bias/Assign"
  op: "Assign"
  input: "debiased_classifier/classifier_model/linear_3/bias"
  input: "debiased_classifier/classifier_model/linear_3/bias/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_3/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/linear_3/bias/read"
  op: "Identity"
  input: "debiased_classifier/classifier_model/linear_3/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_3/bias"
      }
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/random_normal_4/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\010\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/random_normal_4/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/random_normal_4/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/random_normal_4/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "debiased_classifier/classifier_model/random_normal_4/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/random_normal_4/mul"
  op: "Mul"
  input: "debiased_classifier/classifier_model/random_normal_4/RandomStandardNormal"
  input: "debiased_classifier/classifier_model/random_normal_4/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/random_normal_4"
  op: "Add"
  input: "debiased_classifier/classifier_model/random_normal_4/mul"
  input: "debiased_classifier/classifier_model/random_normal_4/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/Square_4"
  op: "Square"
  input: "debiased_classifier/classifier_model/random_normal_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/Sum_4/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/Sum_4"
  op: "Sum"
  input: "debiased_classifier/classifier_model/Square_4"
  input: "debiased_classifier/classifier_model/Sum_4/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/add_4/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/add_4"
  op: "AddV2"
  input: "debiased_classifier/classifier_model/add_4/x"
  input: "debiased_classifier/classifier_model/Sum_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/Sqrt_4"
  op: "Sqrt"
  input: "debiased_classifier/classifier_model/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/truediv_4"
  op: "RealDiv"
  input: "debiased_classifier/classifier_model/random_normal_4"
  input: "debiased_classifier/classifier_model/Sqrt_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/linear_4/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/linear_4/kernel/Assign"
  op: "Assign"
  input: "debiased_classifier/classifier_model/linear_4/kernel"
  input: "debiased_classifier/classifier_model/truediv_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_4/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/linear_4/kernel/read"
  op: "Identity"
  input: "debiased_classifier/classifier_model/linear_4/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_4/kernel"
      }
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/linear_4/bias/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/linear_4/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/linear_4/bias/Assign"
  op: "Assign"
  input: "debiased_classifier/classifier_model/linear_4/bias"
  input: "debiased_classifier/classifier_model/linear_4/bias/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_4/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/linear_4/bias/read"
  op: "Identity"
  input: "debiased_classifier/classifier_model/linear_4/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_4/bias"
      }
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/random_normal_5/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/random_normal_5/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/random_normal_5/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/random_normal_5/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "debiased_classifier/classifier_model/random_normal_5/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/random_normal_5/mul"
  op: "Mul"
  input: "debiased_classifier/classifier_model/random_normal_5/RandomStandardNormal"
  input: "debiased_classifier/classifier_model/random_normal_5/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/random_normal_5"
  op: "Add"
  input: "debiased_classifier/classifier_model/random_normal_5/mul"
  input: "debiased_classifier/classifier_model/random_normal_5/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/Square_5"
  op: "Square"
  input: "debiased_classifier/classifier_model/random_normal_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/Sum_5/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/Sum_5"
  op: "Sum"
  input: "debiased_classifier/classifier_model/Square_5"
  input: "debiased_classifier/classifier_model/Sum_5/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/add_5/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/add_5"
  op: "AddV2"
  input: "debiased_classifier/classifier_model/add_5/x"
  input: "debiased_classifier/classifier_model/Sum_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/Sqrt_5"
  op: "Sqrt"
  input: "debiased_classifier/classifier_model/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/truediv_5"
  op: "RealDiv"
  input: "debiased_classifier/classifier_model/random_normal_5"
  input: "debiased_classifier/classifier_model/Sqrt_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/linear_5/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/linear_5/kernel/Assign"
  op: "Assign"
  input: "debiased_classifier/classifier_model/linear_5/kernel"
  input: "debiased_classifier/classifier_model/truediv_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_5/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/linear_5/kernel/read"
  op: "Identity"
  input: "debiased_classifier/classifier_model/linear_5/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_5/kernel"
      }
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/linear_5/bias/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/linear_5/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/linear_5/bias/Assign"
  op: "Assign"
  input: "debiased_classifier/classifier_model/linear_5/bias"
  input: "debiased_classifier/classifier_model/linear_5/bias/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_5/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/linear_5/bias/read"
  op: "Identity"
  input: "debiased_classifier/classifier_model/linear_5/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_5/bias"
      }
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/MatMul"
  op: "MatMul"
  input: "debiased_classifier/Placeholder"
  input: "debiased_classifier/classifier_model/linear/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/add_6"
  op: "AddV2"
  input: "debiased_classifier/classifier_model/MatMul"
  input: "debiased_classifier/classifier_model/linear/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/Relu"
  op: "Relu"
  input: "debiased_classifier/classifier_model/add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/MatMul_1"
  op: "MatMul"
  input: "debiased_classifier/classifier_model/Relu"
  input: "debiased_classifier/classifier_model/linear_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/add_7"
  op: "AddV2"
  input: "debiased_classifier/classifier_model/MatMul_1"
  input: "debiased_classifier/classifier_model/linear_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/Relu_1"
  op: "Relu"
  input: "debiased_classifier/classifier_model/add_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/MatMul_2"
  op: "MatMul"
  input: "debiased_classifier/classifier_model/Relu_1"
  input: "debiased_classifier/classifier_model/linear_2/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/add_8"
  op: "AddV2"
  input: "debiased_classifier/classifier_model/MatMul_2"
  input: "debiased_classifier/classifier_model/linear_2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/Relu_2"
  op: "Relu"
  input: "debiased_classifier/classifier_model/add_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/MatMul_3"
  op: "MatMul"
  input: "debiased_classifier/classifier_model/Relu_2"
  input: "debiased_classifier/classifier_model/linear_3/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/add_9"
  op: "AddV2"
  input: "debiased_classifier/classifier_model/MatMul_3"
  input: "debiased_classifier/classifier_model/linear_3/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/Relu_3"
  op: "Relu"
  input: "debiased_classifier/classifier_model/add_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/MatMul_4"
  op: "MatMul"
  input: "debiased_classifier/classifier_model/Relu_3"
  input: "debiased_classifier/classifier_model/linear_4/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/add_10"
  op: "AddV2"
  input: "debiased_classifier/classifier_model/MatMul_4"
  input: "debiased_classifier/classifier_model/linear_4/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/Relu_4"
  op: "Relu"
  input: "debiased_classifier/classifier_model/add_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/MatMul_5"
  op: "MatMul"
  input: "debiased_classifier/classifier_model/Relu_4"
  input: "debiased_classifier/classifier_model/linear_5/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/add_11"
  op: "AddV2"
  input: "debiased_classifier/classifier_model/MatMul_5"
  input: "debiased_classifier/classifier_model/linear_5/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/Softmax"
  op: "Softmax"
  input: "debiased_classifier/classifier_model/add_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/MatMul_6"
  op: "MatMul"
  input: "debiased_classifier/Placeholder"
  input: "debiased_classifier/classifier_model/linear/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/add_12"
  op: "AddV2"
  input: "debiased_classifier/classifier_model/MatMul_6"
  input: "debiased_classifier/classifier_model/linear/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/Relu_5"
  op: "Relu"
  input: "debiased_classifier/classifier_model/add_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/MatMul_7"
  op: "MatMul"
  input: "debiased_classifier/classifier_model/Relu_5"
  input: "debiased_classifier/classifier_model/linear_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/add_13"
  op: "AddV2"
  input: "debiased_classifier/classifier_model/MatMul_7"
  input: "debiased_classifier/classifier_model/linear_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/Relu_6"
  op: "Relu"
  input: "debiased_classifier/classifier_model/add_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/MatMul_8"
  op: "MatMul"
  input: "debiased_classifier/classifier_model/Relu_6"
  input: "debiased_classifier/classifier_model/linear_2/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/add_14"
  op: "AddV2"
  input: "debiased_classifier/classifier_model/MatMul_8"
  input: "debiased_classifier/classifier_model/linear_2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/Relu_7"
  op: "Relu"
  input: "debiased_classifier/classifier_model/add_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/MatMul_9"
  op: "MatMul"
  input: "debiased_classifier/classifier_model/Relu_7"
  input: "debiased_classifier/classifier_model/linear_3/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/add_15"
  op: "AddV2"
  input: "debiased_classifier/classifier_model/MatMul_9"
  input: "debiased_classifier/classifier_model/linear_3/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/Relu_8"
  op: "Relu"
  input: "debiased_classifier/classifier_model/add_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/MatMul_10"
  op: "MatMul"
  input: "debiased_classifier/classifier_model/Relu_8"
  input: "debiased_classifier/classifier_model/linear_4/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/add_16"
  op: "AddV2"
  input: "debiased_classifier/classifier_model/MatMul_10"
  input: "debiased_classifier/classifier_model/linear_4/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/Relu_9"
  op: "Relu"
  input: "debiased_classifier/classifier_model/add_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/MatMul_11"
  op: "MatMul"
  input: "debiased_classifier/classifier_model/Relu_9"
  input: "debiased_classifier/classifier_model/linear_5/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/add_17"
  op: "AddV2"
  input: "debiased_classifier/classifier_model/MatMul_11"
  input: "debiased_classifier/classifier_model/linear_5/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/Softmax_1"
  op: "Softmax"
  input: "debiased_classifier/classifier_model/add_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/MatMul_12"
  op: "MatMul"
  input: "debiased_classifier/Placeholder"
  input: "debiased_classifier/classifier_model/linear/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/add_18"
  op: "AddV2"
  input: "debiased_classifier/classifier_model/MatMul_12"
  input: "debiased_classifier/classifier_model/linear/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/Relu_10"
  op: "Relu"
  input: "debiased_classifier/classifier_model/add_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/MatMul_13"
  op: "MatMul"
  input: "debiased_classifier/classifier_model/Relu_10"
  input: "debiased_classifier/classifier_model/linear_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/add_19"
  op: "AddV2"
  input: "debiased_classifier/classifier_model/MatMul_13"
  input: "debiased_classifier/classifier_model/linear_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/Relu_11"
  op: "Relu"
  input: "debiased_classifier/classifier_model/add_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/MatMul_14"
  op: "MatMul"
  input: "debiased_classifier/classifier_model/Relu_11"
  input: "debiased_classifier/classifier_model/linear_2/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/add_20"
  op: "AddV2"
  input: "debiased_classifier/classifier_model/MatMul_14"
  input: "debiased_classifier/classifier_model/linear_2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/Relu_12"
  op: "Relu"
  input: "debiased_classifier/classifier_model/add_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/MatMul_15"
  op: "MatMul"
  input: "debiased_classifier/classifier_model/Relu_12"
  input: "debiased_classifier/classifier_model/linear_3/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/add_21"
  op: "AddV2"
  input: "debiased_classifier/classifier_model/MatMul_15"
  input: "debiased_classifier/classifier_model/linear_3/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/Relu_13"
  op: "Relu"
  input: "debiased_classifier/classifier_model/add_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/MatMul_16"
  op: "MatMul"
  input: "debiased_classifier/classifier_model/Relu_13"
  input: "debiased_classifier/classifier_model/linear_4/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/add_22"
  op: "AddV2"
  input: "debiased_classifier/classifier_model/MatMul_16"
  input: "debiased_classifier/classifier_model/linear_4/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/Relu_14"
  op: "Relu"
  input: "debiased_classifier/classifier_model/add_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/MatMul_17"
  op: "MatMul"
  input: "debiased_classifier/classifier_model/Relu_14"
  input: "debiased_classifier/classifier_model/linear_5/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/add_23"
  op: "AddV2"
  input: "debiased_classifier/classifier_model/MatMul_17"
  input: "debiased_classifier/classifier_model/linear_5/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/classifier_model/Softmax_2"
  op: "Softmax"
  input: "debiased_classifier/classifier_model/add_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/logistic_loss/zeros_like"
  op: "ZerosLike"
  input: "debiased_classifier/classifier_model/add_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/logistic_loss/GreaterEqual"
  op: "GreaterEqual"
  input: "debiased_classifier/classifier_model/add_17"
  input: "debiased_classifier/logistic_loss/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/logistic_loss/Select"
  op: "Select"
  input: "debiased_classifier/logistic_loss/GreaterEqual"
  input: "debiased_classifier/classifier_model/add_17"
  input: "debiased_classifier/logistic_loss/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/logistic_loss/Neg"
  op: "Neg"
  input: "debiased_classifier/classifier_model/add_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/logistic_loss/Select_1"
  op: "Select"
  input: "debiased_classifier/logistic_loss/GreaterEqual"
  input: "debiased_classifier/logistic_loss/Neg"
  input: "debiased_classifier/classifier_model/add_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/logistic_loss/mul"
  op: "Mul"
  input: "debiased_classifier/classifier_model/add_17"
  input: "debiased_classifier/Placeholder_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/logistic_loss/sub"
  op: "Sub"
  input: "debiased_classifier/logistic_loss/Select"
  input: "debiased_classifier/logistic_loss/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/logistic_loss/Exp"
  op: "Exp"
  input: "debiased_classifier/logistic_loss/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/logistic_loss/Log1p"
  op: "Log1p"
  input: "debiased_classifier/logistic_loss/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/logistic_loss"
  op: "Add"
  input: "debiased_classifier/logistic_loss/sub"
  input: "debiased_classifier/logistic_loss/Log1p"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "debiased_classifier/Mean"
  op: "Mean"
  input: "debiased_classifier/logistic_loss"
  input: "debiased_classifier/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/adversary_model/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "debiased_classifier/adversary_model/c"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "debiased_classifier/adversary_model/c/Assign"
  op: "Assign"
  input: "debiased_classifier/adversary_model/c"
  input: "debiased_classifier/adversary_model/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/adversary_model/c"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/adversary_model/c/read"
  op: "Identity"
  input: "debiased_classifier/adversary_model/c"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/adversary_model/c"
      }
    }
  }
}
node {
  name: "debiased_classifier/adversary_model/Abs"
  op: "Abs"
  input: "debiased_classifier/adversary_model/c/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/adversary_model/add/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "debiased_classifier/adversary_model/add"
  op: "AddV2"
  input: "debiased_classifier/adversary_model/add/x"
  input: "debiased_classifier/adversary_model/Abs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/adversary_model/mul"
  op: "Mul"
  input: "debiased_classifier/adversary_model/add"
  input: "debiased_classifier/classifier_model/add_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/adversary_model/Sigmoid"
  op: "Sigmoid"
  input: "debiased_classifier/adversary_model/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/adversary_model/W2/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/adversary_model/W2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\003\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "debiased_classifier/adversary_model/W2/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/adversary_model/W2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.2247449159622192
      }
    }
  }
}
node {
  name: "debiased_classifier/adversary_model/W2/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/adversary_model/W2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.2247449159622192
      }
    }
  }
}
node {
  name: "debiased_classifier/adversary_model/W2/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "debiased_classifier/adversary_model/W2/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/adversary_model/W2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 2112372354
    }
  }
}
node {
  name: "debiased_classifier/adversary_model/W2/Initializer/random_uniform/sub"
  op: "Sub"
  input: "debiased_classifier/adversary_model/W2/Initializer/random_uniform/max"
  input: "debiased_classifier/adversary_model/W2/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/adversary_model/W2"
      }
    }
  }
}
node {
  name: "debiased_classifier/adversary_model/W2/Initializer/random_uniform/mul"
  op: "Mul"
  input: "debiased_classifier/adversary_model/W2/Initializer/random_uniform/RandomUniform"
  input: "debiased_classifier/adversary_model/W2/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/adversary_model/W2"
      }
    }
  }
}
node {
  name: "debiased_classifier/adversary_model/W2/Initializer/random_uniform"
  op: "Add"
  input: "debiased_classifier/adversary_model/W2/Initializer/random_uniform/mul"
  input: "debiased_classifier/adversary_model/W2/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/adversary_model/W2"
      }
    }
  }
}
node {
  name: "debiased_classifier/adversary_model/W2"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/adversary_model/W2"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "debiased_classifier/adversary_model/W2/Assign"
  op: "Assign"
  input: "debiased_classifier/adversary_model/W2"
  input: "debiased_classifier/adversary_model/W2/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/adversary_model/W2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/adversary_model/W2/read"
  op: "Identity"
  input: "debiased_classifier/adversary_model/W2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/adversary_model/W2"
      }
    }
  }
}
node {
  name: "debiased_classifier/adversary_model/zeros"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "debiased_classifier/adversary_model/b2"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "debiased_classifier/adversary_model/b2/Assign"
  op: "Assign"
  input: "debiased_classifier/adversary_model/b2"
  input: "debiased_classifier/adversary_model/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/adversary_model/b2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/adversary_model/b2/read"
  op: "Identity"
  input: "debiased_classifier/adversary_model/b2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/adversary_model/b2"
      }
    }
  }
}
node {
  name: "debiased_classifier/adversary_model/mul_1"
  op: "Mul"
  input: "debiased_classifier/adversary_model/Sigmoid"
  input: "debiased_classifier/Placeholder_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/adversary_model/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "debiased_classifier/adversary_model/sub"
  op: "Sub"
  input: "debiased_classifier/adversary_model/sub/x"
  input: "debiased_classifier/Placeholder_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/adversary_model/mul_2"
  op: "Mul"
  input: "debiased_classifier/adversary_model/Sigmoid"
  input: "debiased_classifier/adversary_model/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/adversary_model/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "debiased_classifier/adversary_model/concat"
  op: "ConcatV2"
  input: "debiased_classifier/adversary_model/Sigmoid"
  input: "debiased_classifier/adversary_model/mul_1"
  input: "debiased_classifier/adversary_model/mul_2"
  input: "debiased_classifier/adversary_model/concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/adversary_model/MatMul"
  op: "MatMul"
  input: "debiased_classifier/adversary_model/concat"
  input: "debiased_classifier/adversary_model/W2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/adversary_model/add_1"
  op: "AddV2"
  input: "debiased_classifier/adversary_model/MatMul"
  input: "debiased_classifier/adversary_model/b2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/adversary_model/Sigmoid_1"
  op: "Sigmoid"
  input: "debiased_classifier/adversary_model/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/logistic_loss_1/zeros_like"
  op: "ZerosLike"
  input: "debiased_classifier/adversary_model/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/logistic_loss_1/GreaterEqual"
  op: "GreaterEqual"
  input: "debiased_classifier/adversary_model/add_1"
  input: "debiased_classifier/logistic_loss_1/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/logistic_loss_1/Select"
  op: "Select"
  input: "debiased_classifier/logistic_loss_1/GreaterEqual"
  input: "debiased_classifier/adversary_model/add_1"
  input: "debiased_classifier/logistic_loss_1/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/logistic_loss_1/Neg"
  op: "Neg"
  input: "debiased_classifier/adversary_model/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/logistic_loss_1/Select_1"
  op: "Select"
  input: "debiased_classifier/logistic_loss_1/GreaterEqual"
  input: "debiased_classifier/logistic_loss_1/Neg"
  input: "debiased_classifier/adversary_model/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/logistic_loss_1/mul"
  op: "Mul"
  input: "debiased_classifier/adversary_model/add_1"
  input: "debiased_classifier/Placeholder_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/logistic_loss_1/sub"
  op: "Sub"
  input: "debiased_classifier/logistic_loss_1/Select"
  input: "debiased_classifier/logistic_loss_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/logistic_loss_1/Exp"
  op: "Exp"
  input: "debiased_classifier/logistic_loss_1/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/logistic_loss_1/Log1p"
  op: "Log1p"
  input: "debiased_classifier/logistic_loss_1/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/logistic_loss_1"
  op: "Add"
  input: "debiased_classifier/logistic_loss_1/sub"
  input: "debiased_classifier/logistic_loss_1/Log1p"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "debiased_classifier/Mean_1"
  op: "Mean"
  input: "debiased_classifier/logistic_loss_1"
  input: "debiased_classifier/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/Variable/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "debiased_classifier/Variable"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "debiased_classifier/Variable/Assign"
  op: "Assign"
  input: "debiased_classifier/Variable"
  input: "debiased_classifier/Variable/initial_value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/Variable/read"
  op: "Identity"
  input: "debiased_classifier/Variable"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/Variable"
      }
    }
  }
}
node {
  name: "debiased_classifier/ExponentialDecay/initial_learning_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "debiased_classifier/ExponentialDecay/Cast/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1000
      }
    }
  }
}
node {
  name: "debiased_classifier/ExponentialDecay/Cast"
  op: "Cast"
  input: "debiased_classifier/ExponentialDecay/Cast/x"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/ExponentialDecay/Cast_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9599999785423279
      }
    }
  }
}
node {
  name: "debiased_classifier/ExponentialDecay/Cast_2"
  op: "Cast"
  input: "debiased_classifier/Variable/read"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/ExponentialDecay/truediv"
  op: "RealDiv"
  input: "debiased_classifier/ExponentialDecay/Cast_2"
  input: "debiased_classifier/ExponentialDecay/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/ExponentialDecay/Floor"
  op: "Floor"
  input: "debiased_classifier/ExponentialDecay/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/ExponentialDecay/Pow"
  op: "Pow"
  input: "debiased_classifier/ExponentialDecay/Cast_1/x"
  input: "debiased_classifier/ExponentialDecay/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/ExponentialDecay"
  op: "Mul"
  input: "debiased_classifier/ExponentialDecay/initial_learning_rate"
  input: "debiased_classifier/ExponentialDecay/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/gradients/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients/grad_ys_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients/Fill"
  op: "Fill"
  input: "debiased_classifier/gradients/Shape"
  input: "debiased_classifier/gradients/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/Mean_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/Mean_1_grad/Reshape"
  op: "Reshape"
  input: "debiased_classifier/gradients/Fill"
  input: "debiased_classifier/gradients/debiased_classifier/Mean_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/Mean_1_grad/Shape"
  op: "Shape"
  input: "debiased_classifier/logistic_loss_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/Mean_1_grad/Tile"
  op: "Tile"
  input: "debiased_classifier/gradients/debiased_classifier/Mean_1_grad/Reshape"
  input: "debiased_classifier/gradients/debiased_classifier/Mean_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/Mean_1_grad/Shape_1"
  op: "Shape"
  input: "debiased_classifier/logistic_loss_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/Mean_1_grad/Shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/Mean_1_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/Mean_1_grad/Prod"
  op: "Prod"
  input: "debiased_classifier/gradients/debiased_classifier/Mean_1_grad/Shape_1"
  input: "debiased_classifier/gradients/debiased_classifier/Mean_1_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/Mean_1_grad/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/Mean_1_grad/Prod_1"
  op: "Prod"
  input: "debiased_classifier/gradients/debiased_classifier/Mean_1_grad/Shape_2"
  input: "debiased_classifier/gradients/debiased_classifier/Mean_1_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/Mean_1_grad/Maximum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/Mean_1_grad/Maximum"
  op: "Maximum"
  input: "debiased_classifier/gradients/debiased_classifier/Mean_1_grad/Prod_1"
  input: "debiased_classifier/gradients/debiased_classifier/Mean_1_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/Mean_1_grad/floordiv"
  op: "FloorDiv"
  input: "debiased_classifier/gradients/debiased_classifier/Mean_1_grad/Prod"
  input: "debiased_classifier/gradients/debiased_classifier/Mean_1_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/Mean_1_grad/Cast"
  op: "Cast"
  input: "debiased_classifier/gradients/debiased_classifier/Mean_1_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/Mean_1_grad/truediv"
  op: "RealDiv"
  input: "debiased_classifier/gradients/debiased_classifier/Mean_1_grad/Tile"
  input: "debiased_classifier/gradients/debiased_classifier/Mean_1_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1_grad/Shape"
  op: "Shape"
  input: "debiased_classifier/logistic_loss_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1_grad/Shape_1"
  op: "Shape"
  input: "debiased_classifier/logistic_loss_1/Log1p"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1_grad/Shape"
  input: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1_grad/Sum"
  op: "Sum"
  input: "debiased_classifier/gradients/debiased_classifier/Mean_1_grad/truediv"
  input: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1_grad/Reshape"
  op: "Reshape"
  input: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1_grad/Sum"
  input: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1_grad/Sum_1"
  op: "Sum"
  input: "debiased_classifier/gradients/debiased_classifier/Mean_1_grad/truediv"
  input: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1_grad/Reshape_1"
  op: "Reshape"
  input: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1_grad/Sum_1"
  input: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^debiased_classifier/gradients/debiased_classifier/logistic_loss_1_grad/Reshape"
  input: "^debiased_classifier/gradients/debiased_classifier/logistic_loss_1_grad/Reshape_1"
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1_grad/Reshape"
  input: "^debiased_classifier/gradients/debiased_classifier/logistic_loss_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients/debiased_classifier/logistic_loss_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1_grad/Reshape_1"
  input: "^debiased_classifier/gradients/debiased_classifier/logistic_loss_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients/debiased_classifier/logistic_loss_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1/sub_grad/Shape"
  op: "Shape"
  input: "debiased_classifier/logistic_loss_1/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1/sub_grad/Shape_1"
  op: "Shape"
  input: "debiased_classifier/logistic_loss_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1/sub_grad/Shape"
  input: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1/sub_grad/Sum"
  op: "Sum"
  input: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1_grad/tuple/control_dependency"
  input: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1/sub_grad/Reshape"
  op: "Reshape"
  input: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1/sub_grad/Sum"
  input: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1/sub_grad/Neg"
  op: "Neg"
  input: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1/sub_grad/Sum_1"
  op: "Sum"
  input: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1/sub_grad/Neg"
  input: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1/sub_grad/Reshape_1"
  op: "Reshape"
  input: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1/sub_grad/Sum_1"
  input: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^debiased_classifier/gradients/debiased_classifier/logistic_loss_1/sub_grad/Reshape"
  input: "^debiased_classifier/gradients/debiased_classifier/logistic_loss_1/sub_grad/Reshape_1"
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1/sub_grad/Reshape"
  input: "^debiased_classifier/gradients/debiased_classifier/logistic_loss_1/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients/debiased_classifier/logistic_loss_1/sub_grad/Reshape"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1/sub_grad/Reshape_1"
  input: "^debiased_classifier/gradients/debiased_classifier/logistic_loss_1/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients/debiased_classifier/logistic_loss_1/sub_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1/Log1p_grad/add/x"
  op: "Const"
  input: "^debiased_classifier/gradients/debiased_classifier/logistic_loss_1_grad/tuple/control_dependency_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1/Log1p_grad/add"
  op: "AddV2"
  input: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1/Log1p_grad/add/x"
  input: "debiased_classifier/logistic_loss_1/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1/Log1p_grad/Reciprocal"
  op: "Reciprocal"
  input: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1/Log1p_grad/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1/Log1p_grad/mul"
  op: "Mul"
  input: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1_grad/tuple/control_dependency_1"
  input: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1/Log1p_grad/Reciprocal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1/Select_grad/zeros_like"
  op: "ZerosLike"
  input: "debiased_classifier/adversary_model/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1/Select_grad/Select"
  op: "Select"
  input: "debiased_classifier/logistic_loss_1/GreaterEqual"
  input: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1/sub_grad/tuple/control_dependency"
  input: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1/Select_grad/Select_1"
  op: "Select"
  input: "debiased_classifier/logistic_loss_1/GreaterEqual"
  input: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1/Select_grad/zeros_like"
  input: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1/Select_grad/tuple/group_deps"
  op: "NoOp"
  input: "^debiased_classifier/gradients/debiased_classifier/logistic_loss_1/Select_grad/Select"
  input: "^debiased_classifier/gradients/debiased_classifier/logistic_loss_1/Select_grad/Select_1"
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1/Select_grad/tuple/control_dependency"
  op: "Identity"
  input: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1/Select_grad/Select"
  input: "^debiased_classifier/gradients/debiased_classifier/logistic_loss_1/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients/debiased_classifier/logistic_loss_1/Select_grad/Select"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1/Select_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1/Select_grad/Select_1"
  input: "^debiased_classifier/gradients/debiased_classifier/logistic_loss_1/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients/debiased_classifier/logistic_loss_1/Select_grad/Select_1"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1/mul_grad/Shape"
  op: "Shape"
  input: "debiased_classifier/adversary_model/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1/mul_grad/Shape_1"
  op: "Shape"
  input: "debiased_classifier/Placeholder_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1/mul_grad/Shape"
  input: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1/mul_grad/Mul"
  op: "Mul"
  input: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1/sub_grad/tuple/control_dependency_1"
  input: "debiased_classifier/Placeholder_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1/mul_grad/Sum"
  op: "Sum"
  input: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1/mul_grad/Mul"
  input: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1/mul_grad/Reshape"
  op: "Reshape"
  input: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1/mul_grad/Sum"
  input: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1/mul_grad/Mul_1"
  op: "Mul"
  input: "debiased_classifier/adversary_model/add_1"
  input: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1/sub_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1/mul_grad/Sum_1"
  op: "Sum"
  input: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1/mul_grad/Mul_1"
  input: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1/mul_grad/Reshape_1"
  op: "Reshape"
  input: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1/mul_grad/Sum_1"
  input: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^debiased_classifier/gradients/debiased_classifier/logistic_loss_1/mul_grad/Reshape"
  input: "^debiased_classifier/gradients/debiased_classifier/logistic_loss_1/mul_grad/Reshape_1"
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1/mul_grad/Reshape"
  input: "^debiased_classifier/gradients/debiased_classifier/logistic_loss_1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients/debiased_classifier/logistic_loss_1/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1/mul_grad/Reshape_1"
  input: "^debiased_classifier/gradients/debiased_classifier/logistic_loss_1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients/debiased_classifier/logistic_loss_1/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1/Exp_grad/mul"
  op: "Mul"
  input: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1/Log1p_grad/mul"
  input: "debiased_classifier/logistic_loss_1/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1/Select_1_grad/zeros_like"
  op: "ZerosLike"
  input: "debiased_classifier/logistic_loss_1/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1/Select_1_grad/Select"
  op: "Select"
  input: "debiased_classifier/logistic_loss_1/GreaterEqual"
  input: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1/Exp_grad/mul"
  input: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1/Select_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1/Select_1_grad/Select_1"
  op: "Select"
  input: "debiased_classifier/logistic_loss_1/GreaterEqual"
  input: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1/Select_1_grad/zeros_like"
  input: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1/Exp_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1/Select_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^debiased_classifier/gradients/debiased_classifier/logistic_loss_1/Select_1_grad/Select"
  input: "^debiased_classifier/gradients/debiased_classifier/logistic_loss_1/Select_1_grad/Select_1"
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1/Select_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1/Select_1_grad/Select"
  input: "^debiased_classifier/gradients/debiased_classifier/logistic_loss_1/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients/debiased_classifier/logistic_loss_1/Select_1_grad/Select"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1/Select_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1/Select_1_grad/Select_1"
  input: "^debiased_classifier/gradients/debiased_classifier/logistic_loss_1/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients/debiased_classifier/logistic_loss_1/Select_1_grad/Select_1"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1/Neg_grad/Neg"
  op: "Neg"
  input: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1/Select_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/gradients/AddN"
  op: "AddN"
  input: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1/Select_grad/tuple/control_dependency"
  input: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1/mul_grad/tuple/control_dependency"
  input: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1/Select_1_grad/tuple/control_dependency_1"
  input: "debiased_classifier/gradients/debiased_classifier/logistic_loss_1/Neg_grad/Neg"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients/debiased_classifier/logistic_loss_1/Select_grad/Select"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/adversary_model/add_1_grad/Shape"
  op: "Shape"
  input: "debiased_classifier/adversary_model/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/adversary_model/add_1_grad/Shape_1"
  op: "Shape"
  input: "debiased_classifier/adversary_model/b2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/adversary_model/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "debiased_classifier/gradients/debiased_classifier/adversary_model/add_1_grad/Shape"
  input: "debiased_classifier/gradients/debiased_classifier/adversary_model/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/adversary_model/add_1_grad/Sum"
  op: "Sum"
  input: "debiased_classifier/gradients/AddN"
  input: "debiased_classifier/gradients/debiased_classifier/adversary_model/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/adversary_model/add_1_grad/Reshape"
  op: "Reshape"
  input: "debiased_classifier/gradients/debiased_classifier/adversary_model/add_1_grad/Sum"
  input: "debiased_classifier/gradients/debiased_classifier/adversary_model/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/adversary_model/add_1_grad/Sum_1"
  op: "Sum"
  input: "debiased_classifier/gradients/AddN"
  input: "debiased_classifier/gradients/debiased_classifier/adversary_model/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/adversary_model/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "debiased_classifier/gradients/debiased_classifier/adversary_model/add_1_grad/Sum_1"
  input: "debiased_classifier/gradients/debiased_classifier/adversary_model/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/adversary_model/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^debiased_classifier/gradients/debiased_classifier/adversary_model/add_1_grad/Reshape"
  input: "^debiased_classifier/gradients/debiased_classifier/adversary_model/add_1_grad/Reshape_1"
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/adversary_model/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "debiased_classifier/gradients/debiased_classifier/adversary_model/add_1_grad/Reshape"
  input: "^debiased_classifier/gradients/debiased_classifier/adversary_model/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients/debiased_classifier/adversary_model/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/adversary_model/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "debiased_classifier/gradients/debiased_classifier/adversary_model/add_1_grad/Reshape_1"
  input: "^debiased_classifier/gradients/debiased_classifier/adversary_model/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients/debiased_classifier/adversary_model/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/adversary_model/MatMul_grad/MatMul"
  op: "MatMul"
  input: "debiased_classifier/gradients/debiased_classifier/adversary_model/add_1_grad/tuple/control_dependency"
  input: "debiased_classifier/adversary_model/W2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/adversary_model/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "debiased_classifier/adversary_model/concat"
  input: "debiased_classifier/gradients/debiased_classifier/adversary_model/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/adversary_model/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^debiased_classifier/gradients/debiased_classifier/adversary_model/MatMul_grad/MatMul"
  input: "^debiased_classifier/gradients/debiased_classifier/adversary_model/MatMul_grad/MatMul_1"
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/adversary_model/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "debiased_classifier/gradients/debiased_classifier/adversary_model/MatMul_grad/MatMul"
  input: "^debiased_classifier/gradients/debiased_classifier/adversary_model/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients/debiased_classifier/adversary_model/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/adversary_model/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "debiased_classifier/gradients/debiased_classifier/adversary_model/MatMul_grad/MatMul_1"
  input: "^debiased_classifier/gradients/debiased_classifier/adversary_model/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients/debiased_classifier/adversary_model/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/adversary_model/concat_grad/Rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/adversary_model/concat_grad/mod"
  op: "FloorMod"
  input: "debiased_classifier/adversary_model/concat/axis"
  input: "debiased_classifier/gradients/debiased_classifier/adversary_model/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/adversary_model/concat_grad/Shape"
  op: "Shape"
  input: "debiased_classifier/adversary_model/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/adversary_model/concat_grad/ShapeN"
  op: "ShapeN"
  input: "debiased_classifier/adversary_model/Sigmoid"
  input: "debiased_classifier/adversary_model/mul_1"
  input: "debiased_classifier/adversary_model/mul_2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/adversary_model/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "debiased_classifier/gradients/debiased_classifier/adversary_model/concat_grad/mod"
  input: "debiased_classifier/gradients/debiased_classifier/adversary_model/concat_grad/ShapeN"
  input: "debiased_classifier/gradients/debiased_classifier/adversary_model/concat_grad/ShapeN:1"
  input: "debiased_classifier/gradients/debiased_classifier/adversary_model/concat_grad/ShapeN:2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/adversary_model/concat_grad/Slice"
  op: "Slice"
  input: "debiased_classifier/gradients/debiased_classifier/adversary_model/MatMul_grad/tuple/control_dependency"
  input: "debiased_classifier/gradients/debiased_classifier/adversary_model/concat_grad/ConcatOffset"
  input: "debiased_classifier/gradients/debiased_classifier/adversary_model/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/adversary_model/concat_grad/Slice_1"
  op: "Slice"
  input: "debiased_classifier/gradients/debiased_classifier/adversary_model/MatMul_grad/tuple/control_dependency"
  input: "debiased_classifier/gradients/debiased_classifier/adversary_model/concat_grad/ConcatOffset:1"
  input: "debiased_classifier/gradients/debiased_classifier/adversary_model/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/adversary_model/concat_grad/Slice_2"
  op: "Slice"
  input: "debiased_classifier/gradients/debiased_classifier/adversary_model/MatMul_grad/tuple/control_dependency"
  input: "debiased_classifier/gradients/debiased_classifier/adversary_model/concat_grad/ConcatOffset:2"
  input: "debiased_classifier/gradients/debiased_classifier/adversary_model/concat_grad/ShapeN:2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/adversary_model/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^debiased_classifier/gradients/debiased_classifier/adversary_model/concat_grad/Slice"
  input: "^debiased_classifier/gradients/debiased_classifier/adversary_model/concat_grad/Slice_1"
  input: "^debiased_classifier/gradients/debiased_classifier/adversary_model/concat_grad/Slice_2"
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/adversary_model/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "debiased_classifier/gradients/debiased_classifier/adversary_model/concat_grad/Slice"
  input: "^debiased_classifier/gradients/debiased_classifier/adversary_model/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients/debiased_classifier/adversary_model/concat_grad/Slice"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/adversary_model/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "debiased_classifier/gradients/debiased_classifier/adversary_model/concat_grad/Slice_1"
  input: "^debiased_classifier/gradients/debiased_classifier/adversary_model/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients/debiased_classifier/adversary_model/concat_grad/Slice_1"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/adversary_model/concat_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "debiased_classifier/gradients/debiased_classifier/adversary_model/concat_grad/Slice_2"
  input: "^debiased_classifier/gradients/debiased_classifier/adversary_model/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients/debiased_classifier/adversary_model/concat_grad/Slice_2"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/adversary_model/mul_1_grad/Shape"
  op: "Shape"
  input: "debiased_classifier/adversary_model/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/adversary_model/mul_1_grad/Shape_1"
  op: "Shape"
  input: "debiased_classifier/Placeholder_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/adversary_model/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "debiased_classifier/gradients/debiased_classifier/adversary_model/mul_1_grad/Shape"
  input: "debiased_classifier/gradients/debiased_classifier/adversary_model/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/adversary_model/mul_1_grad/Mul"
  op: "Mul"
  input: "debiased_classifier/gradients/debiased_classifier/adversary_model/concat_grad/tuple/control_dependency_1"
  input: "debiased_classifier/Placeholder_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/adversary_model/mul_1_grad/Sum"
  op: "Sum"
  input: "debiased_classifier/gradients/debiased_classifier/adversary_model/mul_1_grad/Mul"
  input: "debiased_classifier/gradients/debiased_classifier/adversary_model/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/adversary_model/mul_1_grad/Reshape"
  op: "Reshape"
  input: "debiased_classifier/gradients/debiased_classifier/adversary_model/mul_1_grad/Sum"
  input: "debiased_classifier/gradients/debiased_classifier/adversary_model/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/adversary_model/mul_1_grad/Mul_1"
  op: "Mul"
  input: "debiased_classifier/adversary_model/Sigmoid"
  input: "debiased_classifier/gradients/debiased_classifier/adversary_model/concat_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/adversary_model/mul_1_grad/Sum_1"
  op: "Sum"
  input: "debiased_classifier/gradients/debiased_classifier/adversary_model/mul_1_grad/Mul_1"
  input: "debiased_classifier/gradients/debiased_classifier/adversary_model/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/adversary_model/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "debiased_classifier/gradients/debiased_classifier/adversary_model/mul_1_grad/Sum_1"
  input: "debiased_classifier/gradients/debiased_classifier/adversary_model/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/adversary_model/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^debiased_classifier/gradients/debiased_classifier/adversary_model/mul_1_grad/Reshape"
  input: "^debiased_classifier/gradients/debiased_classifier/adversary_model/mul_1_grad/Reshape_1"
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/adversary_model/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "debiased_classifier/gradients/debiased_classifier/adversary_model/mul_1_grad/Reshape"
  input: "^debiased_classifier/gradients/debiased_classifier/adversary_model/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients/debiased_classifier/adversary_model/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/adversary_model/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "debiased_classifier/gradients/debiased_classifier/adversary_model/mul_1_grad/Reshape_1"
  input: "^debiased_classifier/gradients/debiased_classifier/adversary_model/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients/debiased_classifier/adversary_model/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/adversary_model/mul_2_grad/Shape"
  op: "Shape"
  input: "debiased_classifier/adversary_model/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/adversary_model/mul_2_grad/Shape_1"
  op: "Shape"
  input: "debiased_classifier/adversary_model/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/adversary_model/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "debiased_classifier/gradients/debiased_classifier/adversary_model/mul_2_grad/Shape"
  input: "debiased_classifier/gradients/debiased_classifier/adversary_model/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/adversary_model/mul_2_grad/Mul"
  op: "Mul"
  input: "debiased_classifier/gradients/debiased_classifier/adversary_model/concat_grad/tuple/control_dependency_2"
  input: "debiased_classifier/adversary_model/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/adversary_model/mul_2_grad/Sum"
  op: "Sum"
  input: "debiased_classifier/gradients/debiased_classifier/adversary_model/mul_2_grad/Mul"
  input: "debiased_classifier/gradients/debiased_classifier/adversary_model/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/adversary_model/mul_2_grad/Reshape"
  op: "Reshape"
  input: "debiased_classifier/gradients/debiased_classifier/adversary_model/mul_2_grad/Sum"
  input: "debiased_classifier/gradients/debiased_classifier/adversary_model/mul_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/adversary_model/mul_2_grad/Mul_1"
  op: "Mul"
  input: "debiased_classifier/adversary_model/Sigmoid"
  input: "debiased_classifier/gradients/debiased_classifier/adversary_model/concat_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/adversary_model/mul_2_grad/Sum_1"
  op: "Sum"
  input: "debiased_classifier/gradients/debiased_classifier/adversary_model/mul_2_grad/Mul_1"
  input: "debiased_classifier/gradients/debiased_classifier/adversary_model/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/adversary_model/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "debiased_classifier/gradients/debiased_classifier/adversary_model/mul_2_grad/Sum_1"
  input: "debiased_classifier/gradients/debiased_classifier/adversary_model/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/adversary_model/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^debiased_classifier/gradients/debiased_classifier/adversary_model/mul_2_grad/Reshape"
  input: "^debiased_classifier/gradients/debiased_classifier/adversary_model/mul_2_grad/Reshape_1"
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/adversary_model/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "debiased_classifier/gradients/debiased_classifier/adversary_model/mul_2_grad/Reshape"
  input: "^debiased_classifier/gradients/debiased_classifier/adversary_model/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients/debiased_classifier/adversary_model/mul_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/adversary_model/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "debiased_classifier/gradients/debiased_classifier/adversary_model/mul_2_grad/Reshape_1"
  input: "^debiased_classifier/gradients/debiased_classifier/adversary_model/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients/debiased_classifier/adversary_model/mul_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients/AddN_1"
  op: "AddN"
  input: "debiased_classifier/gradients/debiased_classifier/adversary_model/concat_grad/tuple/control_dependency"
  input: "debiased_classifier/gradients/debiased_classifier/adversary_model/mul_1_grad/tuple/control_dependency"
  input: "debiased_classifier/gradients/debiased_classifier/adversary_model/mul_2_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients/debiased_classifier/adversary_model/concat_grad/Slice"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/adversary_model/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "debiased_classifier/adversary_model/Sigmoid"
  input: "debiased_classifier/gradients/AddN_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/adversary_model/mul_grad/Shape"
  op: "Shape"
  input: "debiased_classifier/adversary_model/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/adversary_model/mul_grad/Shape_1"
  op: "Shape"
  input: "debiased_classifier/classifier_model/add_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/adversary_model/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "debiased_classifier/gradients/debiased_classifier/adversary_model/mul_grad/Shape"
  input: "debiased_classifier/gradients/debiased_classifier/adversary_model/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/adversary_model/mul_grad/Mul"
  op: "Mul"
  input: "debiased_classifier/gradients/debiased_classifier/adversary_model/Sigmoid_grad/SigmoidGrad"
  input: "debiased_classifier/classifier_model/add_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/adversary_model/mul_grad/Sum"
  op: "Sum"
  input: "debiased_classifier/gradients/debiased_classifier/adversary_model/mul_grad/Mul"
  input: "debiased_classifier/gradients/debiased_classifier/adversary_model/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/adversary_model/mul_grad/Reshape"
  op: "Reshape"
  input: "debiased_classifier/gradients/debiased_classifier/adversary_model/mul_grad/Sum"
  input: "debiased_classifier/gradients/debiased_classifier/adversary_model/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/adversary_model/mul_grad/Mul_1"
  op: "Mul"
  input: "debiased_classifier/adversary_model/add"
  input: "debiased_classifier/gradients/debiased_classifier/adversary_model/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/adversary_model/mul_grad/Sum_1"
  op: "Sum"
  input: "debiased_classifier/gradients/debiased_classifier/adversary_model/mul_grad/Mul_1"
  input: "debiased_classifier/gradients/debiased_classifier/adversary_model/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/adversary_model/mul_grad/Reshape_1"
  op: "Reshape"
  input: "debiased_classifier/gradients/debiased_classifier/adversary_model/mul_grad/Sum_1"
  input: "debiased_classifier/gradients/debiased_classifier/adversary_model/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/adversary_model/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^debiased_classifier/gradients/debiased_classifier/adversary_model/mul_grad/Reshape"
  input: "^debiased_classifier/gradients/debiased_classifier/adversary_model/mul_grad/Reshape_1"
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/adversary_model/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "debiased_classifier/gradients/debiased_classifier/adversary_model/mul_grad/Reshape"
  input: "^debiased_classifier/gradients/debiased_classifier/adversary_model/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients/debiased_classifier/adversary_model/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/adversary_model/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "debiased_classifier/gradients/debiased_classifier/adversary_model/mul_grad/Reshape_1"
  input: "^debiased_classifier/gradients/debiased_classifier/adversary_model/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients/debiased_classifier/adversary_model/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_17_grad/Shape"
  op: "Shape"
  input: "debiased_classifier/classifier_model/MatMul_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_17_grad/Shape_1"
  op: "Shape"
  input: "debiased_classifier/classifier_model/linear_5/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_17_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_17_grad/Shape"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_17_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_17_grad/Sum"
  op: "Sum"
  input: "debiased_classifier/gradients/debiased_classifier/adversary_model/mul_grad/tuple/control_dependency_1"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_17_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_17_grad/Reshape"
  op: "Reshape"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_17_grad/Sum"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_17_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_17_grad/Sum_1"
  op: "Sum"
  input: "debiased_classifier/gradients/debiased_classifier/adversary_model/mul_grad/tuple/control_dependency_1"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_17_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_17_grad/Reshape_1"
  op: "Reshape"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_17_grad/Sum_1"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_17_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_17_grad/tuple/group_deps"
  op: "NoOp"
  input: "^debiased_classifier/gradients/debiased_classifier/classifier_model/add_17_grad/Reshape"
  input: "^debiased_classifier/gradients/debiased_classifier/classifier_model/add_17_grad/Reshape_1"
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_17_grad/tuple/control_dependency"
  op: "Identity"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_17_grad/Reshape"
  input: "^debiased_classifier/gradients/debiased_classifier/classifier_model/add_17_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients/debiased_classifier/classifier_model/add_17_grad/Reshape"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_17_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_17_grad/Reshape_1"
  input: "^debiased_classifier/gradients/debiased_classifier/classifier_model/add_17_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients/debiased_classifier/classifier_model/add_17_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_11_grad/MatMul"
  op: "MatMul"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_17_grad/tuple/control_dependency"
  input: "debiased_classifier/classifier_model/linear_5/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_11_grad/MatMul_1"
  op: "MatMul"
  input: "debiased_classifier/classifier_model/Relu_9"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_17_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_11_grad/tuple/group_deps"
  op: "NoOp"
  input: "^debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_11_grad/MatMul"
  input: "^debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_11_grad/MatMul_1"
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_11_grad/tuple/control_dependency"
  op: "Identity"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_11_grad/MatMul"
  input: "^debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_11_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_11_grad/MatMul"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_11_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_11_grad/MatMul_1"
  input: "^debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_11_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_11_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/Relu_9_grad/ReluGrad"
  op: "ReluGrad"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_11_grad/tuple/control_dependency"
  input: "debiased_classifier/classifier_model/Relu_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_16_grad/Shape"
  op: "Shape"
  input: "debiased_classifier/classifier_model/MatMul_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_16_grad/Shape_1"
  op: "Shape"
  input: "debiased_classifier/classifier_model/linear_4/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_16_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_16_grad/Shape"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_16_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_16_grad/Sum"
  op: "Sum"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/Relu_9_grad/ReluGrad"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_16_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_16_grad/Reshape"
  op: "Reshape"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_16_grad/Sum"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_16_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_16_grad/Sum_1"
  op: "Sum"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/Relu_9_grad/ReluGrad"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_16_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_16_grad/Reshape_1"
  op: "Reshape"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_16_grad/Sum_1"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_16_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_16_grad/tuple/group_deps"
  op: "NoOp"
  input: "^debiased_classifier/gradients/debiased_classifier/classifier_model/add_16_grad/Reshape"
  input: "^debiased_classifier/gradients/debiased_classifier/classifier_model/add_16_grad/Reshape_1"
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_16_grad/tuple/control_dependency"
  op: "Identity"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_16_grad/Reshape"
  input: "^debiased_classifier/gradients/debiased_classifier/classifier_model/add_16_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients/debiased_classifier/classifier_model/add_16_grad/Reshape"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_16_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_16_grad/Reshape_1"
  input: "^debiased_classifier/gradients/debiased_classifier/classifier_model/add_16_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients/debiased_classifier/classifier_model/add_16_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_10_grad/MatMul"
  op: "MatMul"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_16_grad/tuple/control_dependency"
  input: "debiased_classifier/classifier_model/linear_4/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_10_grad/MatMul_1"
  op: "MatMul"
  input: "debiased_classifier/classifier_model/Relu_8"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_16_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_10_grad/tuple/group_deps"
  op: "NoOp"
  input: "^debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_10_grad/MatMul"
  input: "^debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_10_grad/MatMul_1"
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_10_grad/tuple/control_dependency"
  op: "Identity"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_10_grad/MatMul"
  input: "^debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_10_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_10_grad/MatMul"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_10_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_10_grad/MatMul_1"
  input: "^debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_10_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_10_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/Relu_8_grad/ReluGrad"
  op: "ReluGrad"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_10_grad/tuple/control_dependency"
  input: "debiased_classifier/classifier_model/Relu_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_15_grad/Shape"
  op: "Shape"
  input: "debiased_classifier/classifier_model/MatMul_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_15_grad/Shape_1"
  op: "Shape"
  input: "debiased_classifier/classifier_model/linear_3/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_15_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_15_grad/Shape"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_15_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_15_grad/Sum"
  op: "Sum"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/Relu_8_grad/ReluGrad"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_15_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_15_grad/Reshape"
  op: "Reshape"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_15_grad/Sum"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_15_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_15_grad/Sum_1"
  op: "Sum"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/Relu_8_grad/ReluGrad"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_15_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_15_grad/Reshape_1"
  op: "Reshape"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_15_grad/Sum_1"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_15_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_15_grad/tuple/group_deps"
  op: "NoOp"
  input: "^debiased_classifier/gradients/debiased_classifier/classifier_model/add_15_grad/Reshape"
  input: "^debiased_classifier/gradients/debiased_classifier/classifier_model/add_15_grad/Reshape_1"
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_15_grad/tuple/control_dependency"
  op: "Identity"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_15_grad/Reshape"
  input: "^debiased_classifier/gradients/debiased_classifier/classifier_model/add_15_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients/debiased_classifier/classifier_model/add_15_grad/Reshape"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_15_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_15_grad/Reshape_1"
  input: "^debiased_classifier/gradients/debiased_classifier/classifier_model/add_15_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients/debiased_classifier/classifier_model/add_15_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_9_grad/MatMul"
  op: "MatMul"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_15_grad/tuple/control_dependency"
  input: "debiased_classifier/classifier_model/linear_3/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_9_grad/MatMul_1"
  op: "MatMul"
  input: "debiased_classifier/classifier_model/Relu_7"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_15_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_9_grad/tuple/group_deps"
  op: "NoOp"
  input: "^debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_9_grad/MatMul"
  input: "^debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_9_grad/MatMul_1"
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_9_grad/tuple/control_dependency"
  op: "Identity"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_9_grad/MatMul"
  input: "^debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_9_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_9_grad/MatMul"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_9_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_9_grad/MatMul_1"
  input: "^debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_9_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_9_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/Relu_7_grad/ReluGrad"
  op: "ReluGrad"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_9_grad/tuple/control_dependency"
  input: "debiased_classifier/classifier_model/Relu_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_14_grad/Shape"
  op: "Shape"
  input: "debiased_classifier/classifier_model/MatMul_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_14_grad/Shape_1"
  op: "Shape"
  input: "debiased_classifier/classifier_model/linear_2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_14_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_14_grad/Shape"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_14_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_14_grad/Sum"
  op: "Sum"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/Relu_7_grad/ReluGrad"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_14_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_14_grad/Reshape"
  op: "Reshape"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_14_grad/Sum"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_14_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_14_grad/Sum_1"
  op: "Sum"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/Relu_7_grad/ReluGrad"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_14_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_14_grad/Reshape_1"
  op: "Reshape"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_14_grad/Sum_1"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_14_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_14_grad/tuple/group_deps"
  op: "NoOp"
  input: "^debiased_classifier/gradients/debiased_classifier/classifier_model/add_14_grad/Reshape"
  input: "^debiased_classifier/gradients/debiased_classifier/classifier_model/add_14_grad/Reshape_1"
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_14_grad/tuple/control_dependency"
  op: "Identity"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_14_grad/Reshape"
  input: "^debiased_classifier/gradients/debiased_classifier/classifier_model/add_14_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients/debiased_classifier/classifier_model/add_14_grad/Reshape"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_14_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_14_grad/Reshape_1"
  input: "^debiased_classifier/gradients/debiased_classifier/classifier_model/add_14_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients/debiased_classifier/classifier_model/add_14_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_8_grad/MatMul"
  op: "MatMul"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_14_grad/tuple/control_dependency"
  input: "debiased_classifier/classifier_model/linear_2/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_8_grad/MatMul_1"
  op: "MatMul"
  input: "debiased_classifier/classifier_model/Relu_6"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_14_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_8_grad/tuple/group_deps"
  op: "NoOp"
  input: "^debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_8_grad/MatMul"
  input: "^debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_8_grad/MatMul_1"
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_8_grad/tuple/control_dependency"
  op: "Identity"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_8_grad/MatMul"
  input: "^debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_8_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_8_grad/MatMul"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_8_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_8_grad/MatMul_1"
  input: "^debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_8_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_8_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/Relu_6_grad/ReluGrad"
  op: "ReluGrad"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_8_grad/tuple/control_dependency"
  input: "debiased_classifier/classifier_model/Relu_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_13_grad/Shape"
  op: "Shape"
  input: "debiased_classifier/classifier_model/MatMul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_13_grad/Shape_1"
  op: "Shape"
  input: "debiased_classifier/classifier_model/linear_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_13_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_13_grad/Shape"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_13_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_13_grad/Sum"
  op: "Sum"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/Relu_6_grad/ReluGrad"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_13_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_13_grad/Reshape"
  op: "Reshape"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_13_grad/Sum"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_13_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_13_grad/Sum_1"
  op: "Sum"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/Relu_6_grad/ReluGrad"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_13_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_13_grad/Reshape_1"
  op: "Reshape"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_13_grad/Sum_1"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_13_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_13_grad/tuple/group_deps"
  op: "NoOp"
  input: "^debiased_classifier/gradients/debiased_classifier/classifier_model/add_13_grad/Reshape"
  input: "^debiased_classifier/gradients/debiased_classifier/classifier_model/add_13_grad/Reshape_1"
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_13_grad/tuple/control_dependency"
  op: "Identity"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_13_grad/Reshape"
  input: "^debiased_classifier/gradients/debiased_classifier/classifier_model/add_13_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients/debiased_classifier/classifier_model/add_13_grad/Reshape"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_13_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_13_grad/Reshape_1"
  input: "^debiased_classifier/gradients/debiased_classifier/classifier_model/add_13_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients/debiased_classifier/classifier_model/add_13_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_7_grad/MatMul"
  op: "MatMul"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_13_grad/tuple/control_dependency"
  input: "debiased_classifier/classifier_model/linear_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_7_grad/MatMul_1"
  op: "MatMul"
  input: "debiased_classifier/classifier_model/Relu_5"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_13_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_7_grad/tuple/group_deps"
  op: "NoOp"
  input: "^debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_7_grad/MatMul"
  input: "^debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_7_grad/MatMul_1"
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_7_grad/tuple/control_dependency"
  op: "Identity"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_7_grad/MatMul"
  input: "^debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_7_grad/MatMul"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_7_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_7_grad/MatMul_1"
  input: "^debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_7_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/Relu_5_grad/ReluGrad"
  op: "ReluGrad"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_7_grad/tuple/control_dependency"
  input: "debiased_classifier/classifier_model/Relu_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_12_grad/Shape"
  op: "Shape"
  input: "debiased_classifier/classifier_model/MatMul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_12_grad/Shape_1"
  op: "Shape"
  input: "debiased_classifier/classifier_model/linear/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_12_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_12_grad/Shape"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_12_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_12_grad/Sum"
  op: "Sum"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/Relu_5_grad/ReluGrad"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_12_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_12_grad/Reshape"
  op: "Reshape"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_12_grad/Sum"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_12_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_12_grad/Sum_1"
  op: "Sum"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/Relu_5_grad/ReluGrad"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_12_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_12_grad/Reshape_1"
  op: "Reshape"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_12_grad/Sum_1"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_12_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_12_grad/tuple/group_deps"
  op: "NoOp"
  input: "^debiased_classifier/gradients/debiased_classifier/classifier_model/add_12_grad/Reshape"
  input: "^debiased_classifier/gradients/debiased_classifier/classifier_model/add_12_grad/Reshape_1"
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_12_grad/tuple/control_dependency"
  op: "Identity"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_12_grad/Reshape"
  input: "^debiased_classifier/gradients/debiased_classifier/classifier_model/add_12_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients/debiased_classifier/classifier_model/add_12_grad/Reshape"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_12_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_12_grad/Reshape_1"
  input: "^debiased_classifier/gradients/debiased_classifier/classifier_model/add_12_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients/debiased_classifier/classifier_model/add_12_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_6_grad/MatMul"
  op: "MatMul"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_12_grad/tuple/control_dependency"
  input: "debiased_classifier/classifier_model/linear/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_6_grad/MatMul_1"
  op: "MatMul"
  input: "debiased_classifier/Placeholder"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_12_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_6_grad/tuple/group_deps"
  op: "NoOp"
  input: "^debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_6_grad/MatMul"
  input: "^debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_6_grad/MatMul_1"
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_6_grad/tuple/control_dependency"
  op: "Identity"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_6_grad/MatMul"
  input: "^debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_6_grad/MatMul"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_6_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_6_grad/MatMul_1"
  input: "^debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_6_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/grad_ys_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/Fill"
  op: "Fill"
  input: "debiased_classifier/gradients_1/Shape"
  input: "debiased_classifier/gradients_1/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/Mean_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/Mean_grad/Reshape"
  op: "Reshape"
  input: "debiased_classifier/gradients_1/Fill"
  input: "debiased_classifier/gradients_1/debiased_classifier/Mean_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/Mean_grad/Shape"
  op: "Shape"
  input: "debiased_classifier/logistic_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/Mean_grad/Tile"
  op: "Tile"
  input: "debiased_classifier/gradients_1/debiased_classifier/Mean_grad/Reshape"
  input: "debiased_classifier/gradients_1/debiased_classifier/Mean_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/Mean_grad/Shape_1"
  op: "Shape"
  input: "debiased_classifier/logistic_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/Mean_grad/Shape_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/Mean_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/Mean_grad/Prod"
  op: "Prod"
  input: "debiased_classifier/gradients_1/debiased_classifier/Mean_grad/Shape_1"
  input: "debiased_classifier/gradients_1/debiased_classifier/Mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/Mean_grad/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/Mean_grad/Prod_1"
  op: "Prod"
  input: "debiased_classifier/gradients_1/debiased_classifier/Mean_grad/Shape_2"
  input: "debiased_classifier/gradients_1/debiased_classifier/Mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/Mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/Mean_grad/Maximum"
  op: "Maximum"
  input: "debiased_classifier/gradients_1/debiased_classifier/Mean_grad/Prod_1"
  input: "debiased_classifier/gradients_1/debiased_classifier/Mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/Mean_grad/floordiv"
  op: "FloorDiv"
  input: "debiased_classifier/gradients_1/debiased_classifier/Mean_grad/Prod"
  input: "debiased_classifier/gradients_1/debiased_classifier/Mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/Mean_grad/Cast"
  op: "Cast"
  input: "debiased_classifier/gradients_1/debiased_classifier/Mean_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/Mean_grad/truediv"
  op: "RealDiv"
  input: "debiased_classifier/gradients_1/debiased_classifier/Mean_grad/Tile"
  input: "debiased_classifier/gradients_1/debiased_classifier/Mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss_grad/Shape"
  op: "Shape"
  input: "debiased_classifier/logistic_loss/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss_grad/Shape_1"
  op: "Shape"
  input: "debiased_classifier/logistic_loss/Log1p"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss_grad/Shape"
  input: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss_grad/Sum"
  op: "Sum"
  input: "debiased_classifier/gradients_1/debiased_classifier/Mean_grad/truediv"
  input: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss_grad/Reshape"
  op: "Reshape"
  input: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss_grad/Sum"
  input: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss_grad/Sum_1"
  op: "Sum"
  input: "debiased_classifier/gradients_1/debiased_classifier/Mean_grad/truediv"
  input: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss_grad/Reshape_1"
  op: "Reshape"
  input: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss_grad/Sum_1"
  input: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss_grad/tuple/group_deps"
  op: "NoOp"
  input: "^debiased_classifier/gradients_1/debiased_classifier/logistic_loss_grad/Reshape"
  input: "^debiased_classifier/gradients_1/debiased_classifier/logistic_loss_grad/Reshape_1"
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss_grad/tuple/control_dependency"
  op: "Identity"
  input: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss_grad/Reshape"
  input: "^debiased_classifier/gradients_1/debiased_classifier/logistic_loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients_1/debiased_classifier/logistic_loss_grad/Reshape"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss_grad/Reshape_1"
  input: "^debiased_classifier/gradients_1/debiased_classifier/logistic_loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients_1/debiased_classifier/logistic_loss_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss/sub_grad/Shape"
  op: "Shape"
  input: "debiased_classifier/logistic_loss/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss/sub_grad/Shape_1"
  op: "Shape"
  input: "debiased_classifier/logistic_loss/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss/sub_grad/Shape"
  input: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss/sub_grad/Sum"
  op: "Sum"
  input: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss_grad/tuple/control_dependency"
  input: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss/sub_grad/Reshape"
  op: "Reshape"
  input: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss/sub_grad/Sum"
  input: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss/sub_grad/Neg"
  op: "Neg"
  input: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss/sub_grad/Sum_1"
  op: "Sum"
  input: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss/sub_grad/Neg"
  input: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss/sub_grad/Reshape_1"
  op: "Reshape"
  input: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss/sub_grad/Sum_1"
  input: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^debiased_classifier/gradients_1/debiased_classifier/logistic_loss/sub_grad/Reshape"
  input: "^debiased_classifier/gradients_1/debiased_classifier/logistic_loss/sub_grad/Reshape_1"
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss/sub_grad/Reshape"
  input: "^debiased_classifier/gradients_1/debiased_classifier/logistic_loss/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients_1/debiased_classifier/logistic_loss/sub_grad/Reshape"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss/sub_grad/Reshape_1"
  input: "^debiased_classifier/gradients_1/debiased_classifier/logistic_loss/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients_1/debiased_classifier/logistic_loss/sub_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss/Log1p_grad/add/x"
  op: "Const"
  input: "^debiased_classifier/gradients_1/debiased_classifier/logistic_loss_grad/tuple/control_dependency_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss/Log1p_grad/add"
  op: "AddV2"
  input: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss/Log1p_grad/add/x"
  input: "debiased_classifier/logistic_loss/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss/Log1p_grad/Reciprocal"
  op: "Reciprocal"
  input: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss/Log1p_grad/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss/Log1p_grad/mul"
  op: "Mul"
  input: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss_grad/tuple/control_dependency_1"
  input: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss/Log1p_grad/Reciprocal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss/Select_grad/zeros_like"
  op: "ZerosLike"
  input: "debiased_classifier/classifier_model/add_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss/Select_grad/Select"
  op: "Select"
  input: "debiased_classifier/logistic_loss/GreaterEqual"
  input: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss/sub_grad/tuple/control_dependency"
  input: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss/Select_grad/Select_1"
  op: "Select"
  input: "debiased_classifier/logistic_loss/GreaterEqual"
  input: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss/Select_grad/zeros_like"
  input: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss/Select_grad/tuple/group_deps"
  op: "NoOp"
  input: "^debiased_classifier/gradients_1/debiased_classifier/logistic_loss/Select_grad/Select"
  input: "^debiased_classifier/gradients_1/debiased_classifier/logistic_loss/Select_grad/Select_1"
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss/Select_grad/tuple/control_dependency"
  op: "Identity"
  input: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss/Select_grad/Select"
  input: "^debiased_classifier/gradients_1/debiased_classifier/logistic_loss/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients_1/debiased_classifier/logistic_loss/Select_grad/Select"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss/Select_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss/Select_grad/Select_1"
  input: "^debiased_classifier/gradients_1/debiased_classifier/logistic_loss/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients_1/debiased_classifier/logistic_loss/Select_grad/Select_1"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss/mul_grad/Shape"
  op: "Shape"
  input: "debiased_classifier/classifier_model/add_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss/mul_grad/Shape_1"
  op: "Shape"
  input: "debiased_classifier/Placeholder_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss/mul_grad/Shape"
  input: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss/mul_grad/Mul"
  op: "Mul"
  input: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss/sub_grad/tuple/control_dependency_1"
  input: "debiased_classifier/Placeholder_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss/mul_grad/Sum"
  op: "Sum"
  input: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss/mul_grad/Mul"
  input: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss/mul_grad/Reshape"
  op: "Reshape"
  input: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss/mul_grad/Sum"
  input: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss/mul_grad/Mul_1"
  op: "Mul"
  input: "debiased_classifier/classifier_model/add_17"
  input: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss/sub_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss/mul_grad/Sum_1"
  op: "Sum"
  input: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss/mul_grad/Mul_1"
  input: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss/mul_grad/Reshape_1"
  op: "Reshape"
  input: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss/mul_grad/Sum_1"
  input: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^debiased_classifier/gradients_1/debiased_classifier/logistic_loss/mul_grad/Reshape"
  input: "^debiased_classifier/gradients_1/debiased_classifier/logistic_loss/mul_grad/Reshape_1"
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss/mul_grad/Reshape"
  input: "^debiased_classifier/gradients_1/debiased_classifier/logistic_loss/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients_1/debiased_classifier/logistic_loss/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss/mul_grad/Reshape_1"
  input: "^debiased_classifier/gradients_1/debiased_classifier/logistic_loss/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients_1/debiased_classifier/logistic_loss/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss/Exp_grad/mul"
  op: "Mul"
  input: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss/Log1p_grad/mul"
  input: "debiased_classifier/logistic_loss/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss/Select_1_grad/zeros_like"
  op: "ZerosLike"
  input: "debiased_classifier/logistic_loss/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss/Select_1_grad/Select"
  op: "Select"
  input: "debiased_classifier/logistic_loss/GreaterEqual"
  input: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss/Exp_grad/mul"
  input: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss/Select_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss/Select_1_grad/Select_1"
  op: "Select"
  input: "debiased_classifier/logistic_loss/GreaterEqual"
  input: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss/Select_1_grad/zeros_like"
  input: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss/Exp_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss/Select_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^debiased_classifier/gradients_1/debiased_classifier/logistic_loss/Select_1_grad/Select"
  input: "^debiased_classifier/gradients_1/debiased_classifier/logistic_loss/Select_1_grad/Select_1"
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss/Select_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss/Select_1_grad/Select"
  input: "^debiased_classifier/gradients_1/debiased_classifier/logistic_loss/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients_1/debiased_classifier/logistic_loss/Select_1_grad/Select"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss/Select_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss/Select_1_grad/Select_1"
  input: "^debiased_classifier/gradients_1/debiased_classifier/logistic_loss/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients_1/debiased_classifier/logistic_loss/Select_1_grad/Select_1"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss/Neg_grad/Neg"
  op: "Neg"
  input: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss/Select_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/AddN"
  op: "AddN"
  input: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss/Select_grad/tuple/control_dependency"
  input: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss/mul_grad/tuple/control_dependency"
  input: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss/Select_1_grad/tuple/control_dependency_1"
  input: "debiased_classifier/gradients_1/debiased_classifier/logistic_loss/Neg_grad/Neg"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients_1/debiased_classifier/logistic_loss/Select_grad/Select"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_17_grad/Shape"
  op: "Shape"
  input: "debiased_classifier/classifier_model/MatMul_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_17_grad/Shape_1"
  op: "Shape"
  input: "debiased_classifier/classifier_model/linear_5/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_17_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_17_grad/Shape"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_17_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_17_grad/Sum"
  op: "Sum"
  input: "debiased_classifier/gradients_1/AddN"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_17_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_17_grad/Reshape"
  op: "Reshape"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_17_grad/Sum"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_17_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_17_grad/Sum_1"
  op: "Sum"
  input: "debiased_classifier/gradients_1/AddN"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_17_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_17_grad/Reshape_1"
  op: "Reshape"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_17_grad/Sum_1"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_17_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_17_grad/tuple/group_deps"
  op: "NoOp"
  input: "^debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_17_grad/Reshape"
  input: "^debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_17_grad/Reshape_1"
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_17_grad/tuple/control_dependency"
  op: "Identity"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_17_grad/Reshape"
  input: "^debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_17_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_17_grad/Reshape"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_17_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_17_grad/Reshape_1"
  input: "^debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_17_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_17_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_11_grad/MatMul"
  op: "MatMul"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_17_grad/tuple/control_dependency"
  input: "debiased_classifier/classifier_model/linear_5/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_11_grad/MatMul_1"
  op: "MatMul"
  input: "debiased_classifier/classifier_model/Relu_9"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_17_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_11_grad/tuple/group_deps"
  op: "NoOp"
  input: "^debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_11_grad/MatMul"
  input: "^debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_11_grad/MatMul_1"
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_11_grad/tuple/control_dependency"
  op: "Identity"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_11_grad/MatMul"
  input: "^debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_11_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_11_grad/MatMul"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_11_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_11_grad/MatMul_1"
  input: "^debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_11_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_11_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/Relu_9_grad/ReluGrad"
  op: "ReluGrad"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_11_grad/tuple/control_dependency"
  input: "debiased_classifier/classifier_model/Relu_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_16_grad/Shape"
  op: "Shape"
  input: "debiased_classifier/classifier_model/MatMul_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_16_grad/Shape_1"
  op: "Shape"
  input: "debiased_classifier/classifier_model/linear_4/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_16_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_16_grad/Shape"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_16_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_16_grad/Sum"
  op: "Sum"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/Relu_9_grad/ReluGrad"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_16_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_16_grad/Reshape"
  op: "Reshape"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_16_grad/Sum"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_16_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_16_grad/Sum_1"
  op: "Sum"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/Relu_9_grad/ReluGrad"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_16_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_16_grad/Reshape_1"
  op: "Reshape"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_16_grad/Sum_1"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_16_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_16_grad/tuple/group_deps"
  op: "NoOp"
  input: "^debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_16_grad/Reshape"
  input: "^debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_16_grad/Reshape_1"
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_16_grad/tuple/control_dependency"
  op: "Identity"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_16_grad/Reshape"
  input: "^debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_16_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_16_grad/Reshape"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_16_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_16_grad/Reshape_1"
  input: "^debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_16_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_16_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_10_grad/MatMul"
  op: "MatMul"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_16_grad/tuple/control_dependency"
  input: "debiased_classifier/classifier_model/linear_4/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_10_grad/MatMul_1"
  op: "MatMul"
  input: "debiased_classifier/classifier_model/Relu_8"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_16_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_10_grad/tuple/group_deps"
  op: "NoOp"
  input: "^debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_10_grad/MatMul"
  input: "^debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_10_grad/MatMul_1"
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_10_grad/tuple/control_dependency"
  op: "Identity"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_10_grad/MatMul"
  input: "^debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_10_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_10_grad/MatMul"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_10_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_10_grad/MatMul_1"
  input: "^debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_10_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_10_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/Relu_8_grad/ReluGrad"
  op: "ReluGrad"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_10_grad/tuple/control_dependency"
  input: "debiased_classifier/classifier_model/Relu_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_15_grad/Shape"
  op: "Shape"
  input: "debiased_classifier/classifier_model/MatMul_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_15_grad/Shape_1"
  op: "Shape"
  input: "debiased_classifier/classifier_model/linear_3/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_15_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_15_grad/Shape"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_15_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_15_grad/Sum"
  op: "Sum"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/Relu_8_grad/ReluGrad"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_15_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_15_grad/Reshape"
  op: "Reshape"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_15_grad/Sum"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_15_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_15_grad/Sum_1"
  op: "Sum"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/Relu_8_grad/ReluGrad"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_15_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_15_grad/Reshape_1"
  op: "Reshape"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_15_grad/Sum_1"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_15_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_15_grad/tuple/group_deps"
  op: "NoOp"
  input: "^debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_15_grad/Reshape"
  input: "^debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_15_grad/Reshape_1"
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_15_grad/tuple/control_dependency"
  op: "Identity"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_15_grad/Reshape"
  input: "^debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_15_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_15_grad/Reshape"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_15_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_15_grad/Reshape_1"
  input: "^debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_15_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_15_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_9_grad/MatMul"
  op: "MatMul"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_15_grad/tuple/control_dependency"
  input: "debiased_classifier/classifier_model/linear_3/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_9_grad/MatMul_1"
  op: "MatMul"
  input: "debiased_classifier/classifier_model/Relu_7"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_15_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_9_grad/tuple/group_deps"
  op: "NoOp"
  input: "^debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_9_grad/MatMul"
  input: "^debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_9_grad/MatMul_1"
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_9_grad/tuple/control_dependency"
  op: "Identity"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_9_grad/MatMul"
  input: "^debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_9_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_9_grad/MatMul"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_9_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_9_grad/MatMul_1"
  input: "^debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_9_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_9_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/Relu_7_grad/ReluGrad"
  op: "ReluGrad"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_9_grad/tuple/control_dependency"
  input: "debiased_classifier/classifier_model/Relu_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_14_grad/Shape"
  op: "Shape"
  input: "debiased_classifier/classifier_model/MatMul_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_14_grad/Shape_1"
  op: "Shape"
  input: "debiased_classifier/classifier_model/linear_2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_14_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_14_grad/Shape"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_14_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_14_grad/Sum"
  op: "Sum"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/Relu_7_grad/ReluGrad"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_14_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_14_grad/Reshape"
  op: "Reshape"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_14_grad/Sum"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_14_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_14_grad/Sum_1"
  op: "Sum"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/Relu_7_grad/ReluGrad"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_14_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_14_grad/Reshape_1"
  op: "Reshape"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_14_grad/Sum_1"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_14_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_14_grad/tuple/group_deps"
  op: "NoOp"
  input: "^debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_14_grad/Reshape"
  input: "^debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_14_grad/Reshape_1"
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_14_grad/tuple/control_dependency"
  op: "Identity"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_14_grad/Reshape"
  input: "^debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_14_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_14_grad/Reshape"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_14_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_14_grad/Reshape_1"
  input: "^debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_14_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_14_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_8_grad/MatMul"
  op: "MatMul"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_14_grad/tuple/control_dependency"
  input: "debiased_classifier/classifier_model/linear_2/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_8_grad/MatMul_1"
  op: "MatMul"
  input: "debiased_classifier/classifier_model/Relu_6"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_14_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_8_grad/tuple/group_deps"
  op: "NoOp"
  input: "^debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_8_grad/MatMul"
  input: "^debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_8_grad/MatMul_1"
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_8_grad/tuple/control_dependency"
  op: "Identity"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_8_grad/MatMul"
  input: "^debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_8_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_8_grad/MatMul"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_8_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_8_grad/MatMul_1"
  input: "^debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_8_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_8_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/Relu_6_grad/ReluGrad"
  op: "ReluGrad"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_8_grad/tuple/control_dependency"
  input: "debiased_classifier/classifier_model/Relu_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_13_grad/Shape"
  op: "Shape"
  input: "debiased_classifier/classifier_model/MatMul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_13_grad/Shape_1"
  op: "Shape"
  input: "debiased_classifier/classifier_model/linear_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_13_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_13_grad/Shape"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_13_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_13_grad/Sum"
  op: "Sum"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/Relu_6_grad/ReluGrad"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_13_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_13_grad/Reshape"
  op: "Reshape"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_13_grad/Sum"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_13_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_13_grad/Sum_1"
  op: "Sum"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/Relu_6_grad/ReluGrad"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_13_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_13_grad/Reshape_1"
  op: "Reshape"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_13_grad/Sum_1"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_13_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_13_grad/tuple/group_deps"
  op: "NoOp"
  input: "^debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_13_grad/Reshape"
  input: "^debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_13_grad/Reshape_1"
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_13_grad/tuple/control_dependency"
  op: "Identity"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_13_grad/Reshape"
  input: "^debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_13_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_13_grad/Reshape"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_13_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_13_grad/Reshape_1"
  input: "^debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_13_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_13_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_7_grad/MatMul"
  op: "MatMul"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_13_grad/tuple/control_dependency"
  input: "debiased_classifier/classifier_model/linear_1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_7_grad/MatMul_1"
  op: "MatMul"
  input: "debiased_classifier/classifier_model/Relu_5"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_13_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_7_grad/tuple/group_deps"
  op: "NoOp"
  input: "^debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_7_grad/MatMul"
  input: "^debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_7_grad/MatMul_1"
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_7_grad/tuple/control_dependency"
  op: "Identity"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_7_grad/MatMul"
  input: "^debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_7_grad/MatMul"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_7_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_7_grad/MatMul_1"
  input: "^debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_7_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/Relu_5_grad/ReluGrad"
  op: "ReluGrad"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_7_grad/tuple/control_dependency"
  input: "debiased_classifier/classifier_model/Relu_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_12_grad/Shape"
  op: "Shape"
  input: "debiased_classifier/classifier_model/MatMul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_12_grad/Shape_1"
  op: "Shape"
  input: "debiased_classifier/classifier_model/linear/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_12_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_12_grad/Shape"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_12_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_12_grad/Sum"
  op: "Sum"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/Relu_5_grad/ReluGrad"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_12_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_12_grad/Reshape"
  op: "Reshape"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_12_grad/Sum"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_12_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_12_grad/Sum_1"
  op: "Sum"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/Relu_5_grad/ReluGrad"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_12_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_12_grad/Reshape_1"
  op: "Reshape"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_12_grad/Sum_1"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_12_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_12_grad/tuple/group_deps"
  op: "NoOp"
  input: "^debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_12_grad/Reshape"
  input: "^debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_12_grad/Reshape_1"
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_12_grad/tuple/control_dependency"
  op: "Identity"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_12_grad/Reshape"
  input: "^debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_12_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_12_grad/Reshape"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_12_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_12_grad/Reshape_1"
  input: "^debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_12_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_12_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_6_grad/MatMul"
  op: "MatMul"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_12_grad/tuple/control_dependency"
  input: "debiased_classifier/classifier_model/linear/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_6_grad/MatMul_1"
  op: "MatMul"
  input: "debiased_classifier/Placeholder"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_12_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_6_grad/tuple/group_deps"
  op: "NoOp"
  input: "^debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_6_grad/MatMul"
  input: "^debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_6_grad/MatMul_1"
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_6_grad/tuple/control_dependency"
  op: "Identity"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_6_grad/MatMul"
  input: "^debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_6_grad/MatMul"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_6_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_6_grad/MatMul_1"
  input: "^debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_6_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "debiased_classifier/norm/mul"
  op: "Mul"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_6_grad/tuple/control_dependency_1"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_6_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/norm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "debiased_classifier/norm/Sum"
  op: "Sum"
  input: "debiased_classifier/norm/mul"
  input: "debiased_classifier/norm/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/norm/Sqrt"
  op: "Sqrt"
  input: "debiased_classifier/norm/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/norm/Squeeze"
  op: "Squeeze"
  input: "debiased_classifier/norm/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
      }
    }
  }
}
node {
  name: "debiased_classifier/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.1754943508222875e-38
      }
    }
  }
}
node {
  name: "debiased_classifier/add"
  op: "AddV2"
  input: "debiased_classifier/norm/Squeeze"
  input: "debiased_classifier/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/truediv"
  op: "RealDiv"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_6_grad/tuple/control_dependency_1"
  input: "debiased_classifier/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/mul"
  op: "Mul"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_6_grad/tuple/control_dependency_1"
  input: "debiased_classifier/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "debiased_classifier/Sum"
  op: "Sum"
  input: "debiased_classifier/mul"
  input: "debiased_classifier/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/mul_1"
  op: "Mul"
  input: "debiased_classifier/Sum"
  input: "debiased_classifier/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/sub"
  op: "Sub"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_6_grad/tuple/control_dependency_1"
  input: "debiased_classifier/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/mul_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "debiased_classifier/mul_2"
  op: "Mul"
  input: "debiased_classifier/mul_2/x"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_6_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/sub_1"
  op: "Sub"
  input: "debiased_classifier/sub"
  input: "debiased_classifier/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/norm_1/mul"
  op: "Mul"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_12_grad/tuple/control_dependency_1"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_12_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/norm_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "debiased_classifier/norm_1/Sum"
  op: "Sum"
  input: "debiased_classifier/norm_1/mul"
  input: "debiased_classifier/norm_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/norm_1/Sqrt"
  op: "Sqrt"
  input: "debiased_classifier/norm_1/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/norm_1/Squeeze"
  op: "Squeeze"
  input: "debiased_classifier/norm_1/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
      }
    }
  }
}
node {
  name: "debiased_classifier/add_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.1754943508222875e-38
      }
    }
  }
}
node {
  name: "debiased_classifier/add_1"
  op: "AddV2"
  input: "debiased_classifier/norm_1/Squeeze"
  input: "debiased_classifier/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/truediv_1"
  op: "RealDiv"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_12_grad/tuple/control_dependency_1"
  input: "debiased_classifier/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/mul_3"
  op: "Mul"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_12_grad/tuple/control_dependency_1"
  input: "debiased_classifier/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "debiased_classifier/Sum_1"
  op: "Sum"
  input: "debiased_classifier/mul_3"
  input: "debiased_classifier/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/mul_4"
  op: "Mul"
  input: "debiased_classifier/Sum_1"
  input: "debiased_classifier/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/sub_2"
  op: "Sub"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_12_grad/tuple/control_dependency_1"
  input: "debiased_classifier/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/mul_5/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "debiased_classifier/mul_5"
  op: "Mul"
  input: "debiased_classifier/mul_5/x"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_12_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/sub_3"
  op: "Sub"
  input: "debiased_classifier/sub_2"
  input: "debiased_classifier/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/norm_2/mul"
  op: "Mul"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_7_grad/tuple/control_dependency_1"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_7_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/norm_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "debiased_classifier/norm_2/Sum"
  op: "Sum"
  input: "debiased_classifier/norm_2/mul"
  input: "debiased_classifier/norm_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/norm_2/Sqrt"
  op: "Sqrt"
  input: "debiased_classifier/norm_2/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/norm_2/Squeeze"
  op: "Squeeze"
  input: "debiased_classifier/norm_2/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
      }
    }
  }
}
node {
  name: "debiased_classifier/add_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.1754943508222875e-38
      }
    }
  }
}
node {
  name: "debiased_classifier/add_2"
  op: "AddV2"
  input: "debiased_classifier/norm_2/Squeeze"
  input: "debiased_classifier/add_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/truediv_2"
  op: "RealDiv"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_7_grad/tuple/control_dependency_1"
  input: "debiased_classifier/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/mul_6"
  op: "Mul"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_7_grad/tuple/control_dependency_1"
  input: "debiased_classifier/truediv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "debiased_classifier/Sum_2"
  op: "Sum"
  input: "debiased_classifier/mul_6"
  input: "debiased_classifier/Const_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/mul_7"
  op: "Mul"
  input: "debiased_classifier/Sum_2"
  input: "debiased_classifier/truediv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/sub_4"
  op: "Sub"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_7_grad/tuple/control_dependency_1"
  input: "debiased_classifier/mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/mul_8/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "debiased_classifier/mul_8"
  op: "Mul"
  input: "debiased_classifier/mul_8/x"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_7_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/sub_5"
  op: "Sub"
  input: "debiased_classifier/sub_4"
  input: "debiased_classifier/mul_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/norm_3/mul"
  op: "Mul"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_13_grad/tuple/control_dependency_1"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_13_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/norm_3/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "debiased_classifier/norm_3/Sum"
  op: "Sum"
  input: "debiased_classifier/norm_3/mul"
  input: "debiased_classifier/norm_3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/norm_3/Sqrt"
  op: "Sqrt"
  input: "debiased_classifier/norm_3/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/norm_3/Squeeze"
  op: "Squeeze"
  input: "debiased_classifier/norm_3/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
      }
    }
  }
}
node {
  name: "debiased_classifier/add_3/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.1754943508222875e-38
      }
    }
  }
}
node {
  name: "debiased_classifier/add_3"
  op: "AddV2"
  input: "debiased_classifier/norm_3/Squeeze"
  input: "debiased_classifier/add_3/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/truediv_3"
  op: "RealDiv"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_13_grad/tuple/control_dependency_1"
  input: "debiased_classifier/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/mul_9"
  op: "Mul"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_13_grad/tuple/control_dependency_1"
  input: "debiased_classifier/truediv_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "debiased_classifier/Sum_3"
  op: "Sum"
  input: "debiased_classifier/mul_9"
  input: "debiased_classifier/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/mul_10"
  op: "Mul"
  input: "debiased_classifier/Sum_3"
  input: "debiased_classifier/truediv_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/sub_6"
  op: "Sub"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_13_grad/tuple/control_dependency_1"
  input: "debiased_classifier/mul_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/mul_11/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "debiased_classifier/mul_11"
  op: "Mul"
  input: "debiased_classifier/mul_11/x"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_13_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/sub_7"
  op: "Sub"
  input: "debiased_classifier/sub_6"
  input: "debiased_classifier/mul_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/norm_4/mul"
  op: "Mul"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_8_grad/tuple/control_dependency_1"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_8_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/norm_4/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "debiased_classifier/norm_4/Sum"
  op: "Sum"
  input: "debiased_classifier/norm_4/mul"
  input: "debiased_classifier/norm_4/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/norm_4/Sqrt"
  op: "Sqrt"
  input: "debiased_classifier/norm_4/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/norm_4/Squeeze"
  op: "Squeeze"
  input: "debiased_classifier/norm_4/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
      }
    }
  }
}
node {
  name: "debiased_classifier/add_4/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.1754943508222875e-38
      }
    }
  }
}
node {
  name: "debiased_classifier/add_4"
  op: "AddV2"
  input: "debiased_classifier/norm_4/Squeeze"
  input: "debiased_classifier/add_4/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/truediv_4"
  op: "RealDiv"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_8_grad/tuple/control_dependency_1"
  input: "debiased_classifier/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/mul_12"
  op: "Mul"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_8_grad/tuple/control_dependency_1"
  input: "debiased_classifier/truediv_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/Const_6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "debiased_classifier/Sum_4"
  op: "Sum"
  input: "debiased_classifier/mul_12"
  input: "debiased_classifier/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/mul_13"
  op: "Mul"
  input: "debiased_classifier/Sum_4"
  input: "debiased_classifier/truediv_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/sub_8"
  op: "Sub"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_8_grad/tuple/control_dependency_1"
  input: "debiased_classifier/mul_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/mul_14/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "debiased_classifier/mul_14"
  op: "Mul"
  input: "debiased_classifier/mul_14/x"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_8_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/sub_9"
  op: "Sub"
  input: "debiased_classifier/sub_8"
  input: "debiased_classifier/mul_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/norm_5/mul"
  op: "Mul"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_14_grad/tuple/control_dependency_1"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_14_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/norm_5/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "debiased_classifier/norm_5/Sum"
  op: "Sum"
  input: "debiased_classifier/norm_5/mul"
  input: "debiased_classifier/norm_5/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/norm_5/Sqrt"
  op: "Sqrt"
  input: "debiased_classifier/norm_5/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/norm_5/Squeeze"
  op: "Squeeze"
  input: "debiased_classifier/norm_5/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
      }
    }
  }
}
node {
  name: "debiased_classifier/add_5/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.1754943508222875e-38
      }
    }
  }
}
node {
  name: "debiased_classifier/add_5"
  op: "AddV2"
  input: "debiased_classifier/norm_5/Squeeze"
  input: "debiased_classifier/add_5/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/truediv_5"
  op: "RealDiv"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_14_grad/tuple/control_dependency_1"
  input: "debiased_classifier/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/mul_15"
  op: "Mul"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_14_grad/tuple/control_dependency_1"
  input: "debiased_classifier/truediv_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/Const_7"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "debiased_classifier/Sum_5"
  op: "Sum"
  input: "debiased_classifier/mul_15"
  input: "debiased_classifier/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/mul_16"
  op: "Mul"
  input: "debiased_classifier/Sum_5"
  input: "debiased_classifier/truediv_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/sub_10"
  op: "Sub"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_14_grad/tuple/control_dependency_1"
  input: "debiased_classifier/mul_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/mul_17/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "debiased_classifier/mul_17"
  op: "Mul"
  input: "debiased_classifier/mul_17/x"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_14_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/sub_11"
  op: "Sub"
  input: "debiased_classifier/sub_10"
  input: "debiased_classifier/mul_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/norm_6/mul"
  op: "Mul"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_9_grad/tuple/control_dependency_1"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_9_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/norm_6/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "debiased_classifier/norm_6/Sum"
  op: "Sum"
  input: "debiased_classifier/norm_6/mul"
  input: "debiased_classifier/norm_6/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/norm_6/Sqrt"
  op: "Sqrt"
  input: "debiased_classifier/norm_6/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/norm_6/Squeeze"
  op: "Squeeze"
  input: "debiased_classifier/norm_6/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
      }
    }
  }
}
node {
  name: "debiased_classifier/add_6/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.1754943508222875e-38
      }
    }
  }
}
node {
  name: "debiased_classifier/add_6"
  op: "AddV2"
  input: "debiased_classifier/norm_6/Squeeze"
  input: "debiased_classifier/add_6/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/truediv_6"
  op: "RealDiv"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_9_grad/tuple/control_dependency_1"
  input: "debiased_classifier/add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/mul_18"
  op: "Mul"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_9_grad/tuple/control_dependency_1"
  input: "debiased_classifier/truediv_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/Const_8"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "debiased_classifier/Sum_6"
  op: "Sum"
  input: "debiased_classifier/mul_18"
  input: "debiased_classifier/Const_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/mul_19"
  op: "Mul"
  input: "debiased_classifier/Sum_6"
  input: "debiased_classifier/truediv_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/sub_12"
  op: "Sub"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_9_grad/tuple/control_dependency_1"
  input: "debiased_classifier/mul_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/mul_20/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "debiased_classifier/mul_20"
  op: "Mul"
  input: "debiased_classifier/mul_20/x"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_9_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/sub_13"
  op: "Sub"
  input: "debiased_classifier/sub_12"
  input: "debiased_classifier/mul_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/norm_7/mul"
  op: "Mul"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_15_grad/tuple/control_dependency_1"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_15_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/norm_7/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "debiased_classifier/norm_7/Sum"
  op: "Sum"
  input: "debiased_classifier/norm_7/mul"
  input: "debiased_classifier/norm_7/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/norm_7/Sqrt"
  op: "Sqrt"
  input: "debiased_classifier/norm_7/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/norm_7/Squeeze"
  op: "Squeeze"
  input: "debiased_classifier/norm_7/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
      }
    }
  }
}
node {
  name: "debiased_classifier/add_7/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.1754943508222875e-38
      }
    }
  }
}
node {
  name: "debiased_classifier/add_7"
  op: "AddV2"
  input: "debiased_classifier/norm_7/Squeeze"
  input: "debiased_classifier/add_7/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/truediv_7"
  op: "RealDiv"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_15_grad/tuple/control_dependency_1"
  input: "debiased_classifier/add_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/mul_21"
  op: "Mul"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_15_grad/tuple/control_dependency_1"
  input: "debiased_classifier/truediv_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/Const_9"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "debiased_classifier/Sum_7"
  op: "Sum"
  input: "debiased_classifier/mul_21"
  input: "debiased_classifier/Const_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/mul_22"
  op: "Mul"
  input: "debiased_classifier/Sum_7"
  input: "debiased_classifier/truediv_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/sub_14"
  op: "Sub"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_15_grad/tuple/control_dependency_1"
  input: "debiased_classifier/mul_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/mul_23/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "debiased_classifier/mul_23"
  op: "Mul"
  input: "debiased_classifier/mul_23/x"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_15_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/sub_15"
  op: "Sub"
  input: "debiased_classifier/sub_14"
  input: "debiased_classifier/mul_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/norm_8/mul"
  op: "Mul"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_10_grad/tuple/control_dependency_1"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_10_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/norm_8/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "debiased_classifier/norm_8/Sum"
  op: "Sum"
  input: "debiased_classifier/norm_8/mul"
  input: "debiased_classifier/norm_8/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/norm_8/Sqrt"
  op: "Sqrt"
  input: "debiased_classifier/norm_8/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/norm_8/Squeeze"
  op: "Squeeze"
  input: "debiased_classifier/norm_8/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
      }
    }
  }
}
node {
  name: "debiased_classifier/add_8/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.1754943508222875e-38
      }
    }
  }
}
node {
  name: "debiased_classifier/add_8"
  op: "AddV2"
  input: "debiased_classifier/norm_8/Squeeze"
  input: "debiased_classifier/add_8/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/truediv_8"
  op: "RealDiv"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_10_grad/tuple/control_dependency_1"
  input: "debiased_classifier/add_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/mul_24"
  op: "Mul"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_10_grad/tuple/control_dependency_1"
  input: "debiased_classifier/truediv_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/Const_10"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "debiased_classifier/Sum_8"
  op: "Sum"
  input: "debiased_classifier/mul_24"
  input: "debiased_classifier/Const_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/mul_25"
  op: "Mul"
  input: "debiased_classifier/Sum_8"
  input: "debiased_classifier/truediv_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/sub_16"
  op: "Sub"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_10_grad/tuple/control_dependency_1"
  input: "debiased_classifier/mul_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/mul_26/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "debiased_classifier/mul_26"
  op: "Mul"
  input: "debiased_classifier/mul_26/x"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_10_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/sub_17"
  op: "Sub"
  input: "debiased_classifier/sub_16"
  input: "debiased_classifier/mul_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/norm_9/mul"
  op: "Mul"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_16_grad/tuple/control_dependency_1"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_16_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/norm_9/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "debiased_classifier/norm_9/Sum"
  op: "Sum"
  input: "debiased_classifier/norm_9/mul"
  input: "debiased_classifier/norm_9/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/norm_9/Sqrt"
  op: "Sqrt"
  input: "debiased_classifier/norm_9/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/norm_9/Squeeze"
  op: "Squeeze"
  input: "debiased_classifier/norm_9/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
      }
    }
  }
}
node {
  name: "debiased_classifier/add_9/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.1754943508222875e-38
      }
    }
  }
}
node {
  name: "debiased_classifier/add_9"
  op: "AddV2"
  input: "debiased_classifier/norm_9/Squeeze"
  input: "debiased_classifier/add_9/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/truediv_9"
  op: "RealDiv"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_16_grad/tuple/control_dependency_1"
  input: "debiased_classifier/add_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/mul_27"
  op: "Mul"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_16_grad/tuple/control_dependency_1"
  input: "debiased_classifier/truediv_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/Const_11"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "debiased_classifier/Sum_9"
  op: "Sum"
  input: "debiased_classifier/mul_27"
  input: "debiased_classifier/Const_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/mul_28"
  op: "Mul"
  input: "debiased_classifier/Sum_9"
  input: "debiased_classifier/truediv_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/sub_18"
  op: "Sub"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_16_grad/tuple/control_dependency_1"
  input: "debiased_classifier/mul_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/mul_29/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "debiased_classifier/mul_29"
  op: "Mul"
  input: "debiased_classifier/mul_29/x"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_16_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/sub_19"
  op: "Sub"
  input: "debiased_classifier/sub_18"
  input: "debiased_classifier/mul_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/norm_10/mul"
  op: "Mul"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_11_grad/tuple/control_dependency_1"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_11_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/norm_10/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "debiased_classifier/norm_10/Sum"
  op: "Sum"
  input: "debiased_classifier/norm_10/mul"
  input: "debiased_classifier/norm_10/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/norm_10/Sqrt"
  op: "Sqrt"
  input: "debiased_classifier/norm_10/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/norm_10/Squeeze"
  op: "Squeeze"
  input: "debiased_classifier/norm_10/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
      }
    }
  }
}
node {
  name: "debiased_classifier/add_10/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.1754943508222875e-38
      }
    }
  }
}
node {
  name: "debiased_classifier/add_10"
  op: "AddV2"
  input: "debiased_classifier/norm_10/Squeeze"
  input: "debiased_classifier/add_10/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/truediv_10"
  op: "RealDiv"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_11_grad/tuple/control_dependency_1"
  input: "debiased_classifier/add_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/mul_30"
  op: "Mul"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_11_grad/tuple/control_dependency_1"
  input: "debiased_classifier/truediv_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/Const_12"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "debiased_classifier/Sum_10"
  op: "Sum"
  input: "debiased_classifier/mul_30"
  input: "debiased_classifier/Const_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/mul_31"
  op: "Mul"
  input: "debiased_classifier/Sum_10"
  input: "debiased_classifier/truediv_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/sub_20"
  op: "Sub"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/MatMul_11_grad/tuple/control_dependency_1"
  input: "debiased_classifier/mul_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/mul_32/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "debiased_classifier/mul_32"
  op: "Mul"
  input: "debiased_classifier/mul_32/x"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/MatMul_11_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/sub_21"
  op: "Sub"
  input: "debiased_classifier/sub_20"
  input: "debiased_classifier/mul_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/norm_11/mul"
  op: "Mul"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_17_grad/tuple/control_dependency_1"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_17_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/norm_11/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "debiased_classifier/norm_11/Sum"
  op: "Sum"
  input: "debiased_classifier/norm_11/mul"
  input: "debiased_classifier/norm_11/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/norm_11/Sqrt"
  op: "Sqrt"
  input: "debiased_classifier/norm_11/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/norm_11/Squeeze"
  op: "Squeeze"
  input: "debiased_classifier/norm_11/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
      }
    }
  }
}
node {
  name: "debiased_classifier/add_11/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.1754943508222875e-38
      }
    }
  }
}
node {
  name: "debiased_classifier/add_11"
  op: "AddV2"
  input: "debiased_classifier/norm_11/Squeeze"
  input: "debiased_classifier/add_11/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/truediv_11"
  op: "RealDiv"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_17_grad/tuple/control_dependency_1"
  input: "debiased_classifier/add_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/mul_33"
  op: "Mul"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_17_grad/tuple/control_dependency_1"
  input: "debiased_classifier/truediv_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/Const_13"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "debiased_classifier/Sum_11"
  op: "Sum"
  input: "debiased_classifier/mul_33"
  input: "debiased_classifier/Const_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/mul_34"
  op: "Mul"
  input: "debiased_classifier/Sum_11"
  input: "debiased_classifier/truediv_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/sub_22"
  op: "Sub"
  input: "debiased_classifier/gradients_1/debiased_classifier/classifier_model/add_17_grad/tuple/control_dependency_1"
  input: "debiased_classifier/mul_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/mul_35/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "debiased_classifier/mul_35"
  op: "Mul"
  input: "debiased_classifier/mul_35/x"
  input: "debiased_classifier/gradients/debiased_classifier/classifier_model/add_17_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/sub_23"
  op: "Sub"
  input: "debiased_classifier/sub_22"
  input: "debiased_classifier/mul_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/beta1_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "debiased_classifier/beta1_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "debiased_classifier/beta1_power/Assign"
  op: "Assign"
  input: "debiased_classifier/beta1_power"
  input: "debiased_classifier/beta1_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/beta1_power/read"
  op: "Identity"
  input: "debiased_classifier/beta1_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear/bias"
      }
    }
  }
}
node {
  name: "debiased_classifier/beta2_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "debiased_classifier/beta2_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "debiased_classifier/beta2_power/Assign"
  op: "Assign"
  input: "debiased_classifier/beta2_power"
  input: "debiased_classifier/beta2_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/beta2_power/read"
  op: "Identity"
  input: "debiased_classifier/beta2_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear/bias"
      }
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\022\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 18
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear/kernel/Adam/Assign"
  op: "Assign"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear/kernel/Adam"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear/kernel/Adam/read"
  op: "Identity"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear/kernel"
      }
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\022\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 18
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear/kernel/Adam_1/Assign"
  op: "Assign"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear/kernel/Adam_1"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear/kernel/Adam_1/read"
  op: "Identity"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear/kernel"
      }
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear/bias/Adam/Assign"
  op: "Assign"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear/bias/Adam"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear/bias/Adam/read"
  op: "Identity"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear/bias"
      }
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear/bias/Adam_1/Assign"
  op: "Assign"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear/bias/Adam_1"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear/bias/Adam_1/read"
  op: "Identity"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear/bias"
      }
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear_1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear_1/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear_1/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_1/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_1/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear_1/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear_1/kernel/Adam/Assign"
  op: "Assign"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_1/kernel/Adam"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_1/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear_1/kernel/Adam/read"
  op: "Identity"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_1/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_1/kernel"
      }
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear_1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear_1/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear_1/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_1/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_1/kernel"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear_1/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_1/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear_1/kernel/Adam_1/Assign"
  op: "Assign"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_1/kernel/Adam_1"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_1/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear_1/kernel/Adam_1/read"
  op: "Identity"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_1/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_1/kernel"
      }
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear_1/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear_1/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear_1/bias/Adam/Assign"
  op: "Assign"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_1/bias/Adam"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_1/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear_1/bias/Adam/read"
  op: "Identity"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_1/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_1/bias"
      }
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear_1/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear_1/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear_1/bias/Adam_1/Assign"
  op: "Assign"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_1/bias/Adam_1"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_1/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear_1/bias/Adam_1/read"
  op: "Identity"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_1/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_1/bias"
      }
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear_2/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear_2/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear_2/kernel/Adam/Assign"
  op: "Assign"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_2/kernel/Adam"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_2/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear_2/kernel/Adam/read"
  op: "Identity"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_2/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_2/kernel"
      }
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear_2/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear_2/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_2/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear_2/kernel/Adam_1/Assign"
  op: "Assign"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_2/kernel/Adam_1"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_2/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear_2/kernel/Adam_1/read"
  op: "Identity"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_2/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_2/kernel"
      }
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear_2/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear_2/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear_2/bias/Adam/Assign"
  op: "Assign"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_2/bias/Adam"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_2/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear_2/bias/Adam/read"
  op: "Identity"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_2/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_2/bias"
      }
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear_2/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear_2/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_2/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear_2/bias/Adam_1/Assign"
  op: "Assign"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_2/bias/Adam_1"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_2/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear_2/bias/Adam_1/read"
  op: "Identity"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_2/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_2/bias"
      }
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear_3/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear_3/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_3/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear_3/kernel/Adam/Assign"
  op: "Assign"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_3/kernel/Adam"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_3/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear_3/kernel/Adam/read"
  op: "Identity"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_3/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_3/kernel"
      }
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear_3/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
          dim {
            size: 8
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear_3/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_3/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear_3/kernel/Adam_1/Assign"
  op: "Assign"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_3/kernel/Adam_1"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_3/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear_3/kernel/Adam_1/read"
  op: "Identity"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_3/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_3/kernel"
      }
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear_3/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_3/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear_3/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_3/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear_3/bias/Adam/Assign"
  op: "Assign"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_3/bias/Adam"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_3/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_3/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear_3/bias/Adam/read"
  op: "Identity"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_3/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_3/bias"
      }
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear_3/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_3/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear_3/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_3/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear_3/bias/Adam_1/Assign"
  op: "Assign"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_3/bias/Adam_1"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_3/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_3/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear_3/bias/Adam_1/read"
  op: "Identity"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_3/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_3/bias"
      }
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear_4/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear_4/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_4/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear_4/kernel/Adam/Assign"
  op: "Assign"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_4/kernel/Adam"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_4/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_4/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear_4/kernel/Adam/read"
  op: "Identity"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_4/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_4/kernel"
      }
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear_4/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear_4/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_4/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear_4/kernel/Adam_1/Assign"
  op: "Assign"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_4/kernel/Adam_1"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_4/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_4/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear_4/kernel/Adam_1/read"
  op: "Identity"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_4/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_4/kernel"
      }
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear_4/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_4/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear_4/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_4/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear_4/bias/Adam/Assign"
  op: "Assign"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_4/bias/Adam"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_4/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_4/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear_4/bias/Adam/read"
  op: "Identity"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_4/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_4/bias"
      }
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear_4/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_4/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear_4/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_4/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear_4/bias/Adam_1/Assign"
  op: "Assign"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_4/bias/Adam_1"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_4/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_4/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear_4/bias/Adam_1/read"
  op: "Identity"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_4/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_4/bias"
      }
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear_5/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_5/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear_5/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_5/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear_5/kernel/Adam/Assign"
  op: "Assign"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_5/kernel/Adam"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_5/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_5/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear_5/kernel/Adam/read"
  op: "Identity"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_5/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_5/kernel"
      }
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear_5/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_5/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear_5/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_5/kernel"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear_5/kernel/Adam_1/Assign"
  op: "Assign"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_5/kernel/Adam_1"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_5/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_5/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear_5/kernel/Adam_1/read"
  op: "Identity"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_5/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_5/kernel"
      }
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear_5/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_5/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear_5/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_5/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear_5/bias/Adam/Assign"
  op: "Assign"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_5/bias/Adam"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_5/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_5/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear_5/bias/Adam/read"
  op: "Identity"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_5/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_5/bias"
      }
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear_5/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_5/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear_5/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_5/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear_5/bias/Adam_1/Assign"
  op: "Assign"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_5/bias/Adam_1"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_5/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_5/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/classifier_model/linear_5/bias/Adam_1/read"
  op: "Identity"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_5/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_5/bias"
      }
    }
  }
}
node {
  name: "debiased_classifier/Adam/beta1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "debiased_classifier/Adam/beta2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "debiased_classifier/Adam/epsilon"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "debiased_classifier/Adam/update_debiased_classifier/classifier_model/linear/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "debiased_classifier/classifier_model/linear/kernel"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear/kernel/Adam"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear/kernel/Adam_1"
  input: "debiased_classifier/beta1_power/read"
  input: "debiased_classifier/beta2_power/read"
  input: "debiased_classifier/ExponentialDecay"
  input: "debiased_classifier/Adam/beta1"
  input: "debiased_classifier/Adam/beta2"
  input: "debiased_classifier/Adam/epsilon"
  input: "debiased_classifier/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/Adam/update_debiased_classifier/classifier_model/linear/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "debiased_classifier/classifier_model/linear/bias"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear/bias/Adam"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear/bias/Adam_1"
  input: "debiased_classifier/beta1_power/read"
  input: "debiased_classifier/beta2_power/read"
  input: "debiased_classifier/ExponentialDecay"
  input: "debiased_classifier/Adam/beta1"
  input: "debiased_classifier/Adam/beta2"
  input: "debiased_classifier/Adam/epsilon"
  input: "debiased_classifier/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/Adam/update_debiased_classifier/classifier_model/linear_1/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "debiased_classifier/classifier_model/linear_1/kernel"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_1/kernel/Adam"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_1/kernel/Adam_1"
  input: "debiased_classifier/beta1_power/read"
  input: "debiased_classifier/beta2_power/read"
  input: "debiased_classifier/ExponentialDecay"
  input: "debiased_classifier/Adam/beta1"
  input: "debiased_classifier/Adam/beta2"
  input: "debiased_classifier/Adam/epsilon"
  input: "debiased_classifier/sub_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/Adam/update_debiased_classifier/classifier_model/linear_1/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "debiased_classifier/classifier_model/linear_1/bias"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_1/bias/Adam"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_1/bias/Adam_1"
  input: "debiased_classifier/beta1_power/read"
  input: "debiased_classifier/beta2_power/read"
  input: "debiased_classifier/ExponentialDecay"
  input: "debiased_classifier/Adam/beta1"
  input: "debiased_classifier/Adam/beta2"
  input: "debiased_classifier/Adam/epsilon"
  input: "debiased_classifier/sub_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/Adam/update_debiased_classifier/classifier_model/linear_2/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "debiased_classifier/classifier_model/linear_2/kernel"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_2/kernel/Adam"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_2/kernel/Adam_1"
  input: "debiased_classifier/beta1_power/read"
  input: "debiased_classifier/beta2_power/read"
  input: "debiased_classifier/ExponentialDecay"
  input: "debiased_classifier/Adam/beta1"
  input: "debiased_classifier/Adam/beta2"
  input: "debiased_classifier/Adam/epsilon"
  input: "debiased_classifier/sub_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/Adam/update_debiased_classifier/classifier_model/linear_2/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "debiased_classifier/classifier_model/linear_2/bias"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_2/bias/Adam"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_2/bias/Adam_1"
  input: "debiased_classifier/beta1_power/read"
  input: "debiased_classifier/beta2_power/read"
  input: "debiased_classifier/ExponentialDecay"
  input: "debiased_classifier/Adam/beta1"
  input: "debiased_classifier/Adam/beta2"
  input: "debiased_classifier/Adam/epsilon"
  input: "debiased_classifier/sub_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/Adam/update_debiased_classifier/classifier_model/linear_3/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "debiased_classifier/classifier_model/linear_3/kernel"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_3/kernel/Adam"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_3/kernel/Adam_1"
  input: "debiased_classifier/beta1_power/read"
  input: "debiased_classifier/beta2_power/read"
  input: "debiased_classifier/ExponentialDecay"
  input: "debiased_classifier/Adam/beta1"
  input: "debiased_classifier/Adam/beta2"
  input: "debiased_classifier/Adam/epsilon"
  input: "debiased_classifier/sub_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/Adam/update_debiased_classifier/classifier_model/linear_3/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "debiased_classifier/classifier_model/linear_3/bias"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_3/bias/Adam"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_3/bias/Adam_1"
  input: "debiased_classifier/beta1_power/read"
  input: "debiased_classifier/beta2_power/read"
  input: "debiased_classifier/ExponentialDecay"
  input: "debiased_classifier/Adam/beta1"
  input: "debiased_classifier/Adam/beta2"
  input: "debiased_classifier/Adam/epsilon"
  input: "debiased_classifier/sub_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_3/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/Adam/update_debiased_classifier/classifier_model/linear_4/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "debiased_classifier/classifier_model/linear_4/kernel"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_4/kernel/Adam"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_4/kernel/Adam_1"
  input: "debiased_classifier/beta1_power/read"
  input: "debiased_classifier/beta2_power/read"
  input: "debiased_classifier/ExponentialDecay"
  input: "debiased_classifier/Adam/beta1"
  input: "debiased_classifier/Adam/beta2"
  input: "debiased_classifier/Adam/epsilon"
  input: "debiased_classifier/sub_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_4/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/Adam/update_debiased_classifier/classifier_model/linear_4/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "debiased_classifier/classifier_model/linear_4/bias"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_4/bias/Adam"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_4/bias/Adam_1"
  input: "debiased_classifier/beta1_power/read"
  input: "debiased_classifier/beta2_power/read"
  input: "debiased_classifier/ExponentialDecay"
  input: "debiased_classifier/Adam/beta1"
  input: "debiased_classifier/Adam/beta2"
  input: "debiased_classifier/Adam/epsilon"
  input: "debiased_classifier/sub_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_4/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/Adam/update_debiased_classifier/classifier_model/linear_5/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "debiased_classifier/classifier_model/linear_5/kernel"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_5/kernel/Adam"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_5/kernel/Adam_1"
  input: "debiased_classifier/beta1_power/read"
  input: "debiased_classifier/beta2_power/read"
  input: "debiased_classifier/ExponentialDecay"
  input: "debiased_classifier/Adam/beta1"
  input: "debiased_classifier/Adam/beta2"
  input: "debiased_classifier/Adam/epsilon"
  input: "debiased_classifier/sub_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_5/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/Adam/update_debiased_classifier/classifier_model/linear_5/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "debiased_classifier/classifier_model/linear_5/bias"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_5/bias/Adam"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_5/bias/Adam_1"
  input: "debiased_classifier/beta1_power/read"
  input: "debiased_classifier/beta2_power/read"
  input: "debiased_classifier/ExponentialDecay"
  input: "debiased_classifier/Adam/beta1"
  input: "debiased_classifier/Adam/beta2"
  input: "debiased_classifier/Adam/epsilon"
  input: "debiased_classifier/sub_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_5/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/Adam/mul"
  op: "Mul"
  input: "debiased_classifier/beta1_power/read"
  input: "debiased_classifier/Adam/beta1"
  input: "^debiased_classifier/Adam/update_debiased_classifier/classifier_model/linear/bias/ApplyAdam"
  input: "^debiased_classifier/Adam/update_debiased_classifier/classifier_model/linear/kernel/ApplyAdam"
  input: "^debiased_classifier/Adam/update_debiased_classifier/classifier_model/linear_1/bias/ApplyAdam"
  input: "^debiased_classifier/Adam/update_debiased_classifier/classifier_model/linear_1/kernel/ApplyAdam"
  input: "^debiased_classifier/Adam/update_debiased_classifier/classifier_model/linear_2/bias/ApplyAdam"
  input: "^debiased_classifier/Adam/update_debiased_classifier/classifier_model/linear_2/kernel/ApplyAdam"
  input: "^debiased_classifier/Adam/update_debiased_classifier/classifier_model/linear_3/bias/ApplyAdam"
  input: "^debiased_classifier/Adam/update_debiased_classifier/classifier_model/linear_3/kernel/ApplyAdam"
  input: "^debiased_classifier/Adam/update_debiased_classifier/classifier_model/linear_4/bias/ApplyAdam"
  input: "^debiased_classifier/Adam/update_debiased_classifier/classifier_model/linear_4/kernel/ApplyAdam"
  input: "^debiased_classifier/Adam/update_debiased_classifier/classifier_model/linear_5/bias/ApplyAdam"
  input: "^debiased_classifier/Adam/update_debiased_classifier/classifier_model/linear_5/kernel/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear/bias"
      }
    }
  }
}
node {
  name: "debiased_classifier/Adam/Assign"
  op: "Assign"
  input: "debiased_classifier/beta1_power"
  input: "debiased_classifier/Adam/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/Adam/mul_1"
  op: "Mul"
  input: "debiased_classifier/beta2_power/read"
  input: "debiased_classifier/Adam/beta2"
  input: "^debiased_classifier/Adam/update_debiased_classifier/classifier_model/linear/bias/ApplyAdam"
  input: "^debiased_classifier/Adam/update_debiased_classifier/classifier_model/linear/kernel/ApplyAdam"
  input: "^debiased_classifier/Adam/update_debiased_classifier/classifier_model/linear_1/bias/ApplyAdam"
  input: "^debiased_classifier/Adam/update_debiased_classifier/classifier_model/linear_1/kernel/ApplyAdam"
  input: "^debiased_classifier/Adam/update_debiased_classifier/classifier_model/linear_2/bias/ApplyAdam"
  input: "^debiased_classifier/Adam/update_debiased_classifier/classifier_model/linear_2/kernel/ApplyAdam"
  input: "^debiased_classifier/Adam/update_debiased_classifier/classifier_model/linear_3/bias/ApplyAdam"
  input: "^debiased_classifier/Adam/update_debiased_classifier/classifier_model/linear_3/kernel/ApplyAdam"
  input: "^debiased_classifier/Adam/update_debiased_classifier/classifier_model/linear_4/bias/ApplyAdam"
  input: "^debiased_classifier/Adam/update_debiased_classifier/classifier_model/linear_4/kernel/ApplyAdam"
  input: "^debiased_classifier/Adam/update_debiased_classifier/classifier_model/linear_5/bias/ApplyAdam"
  input: "^debiased_classifier/Adam/update_debiased_classifier/classifier_model/linear_5/kernel/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear/bias"
      }
    }
  }
}
node {
  name: "debiased_classifier/Adam/Assign_1"
  op: "Assign"
  input: "debiased_classifier/beta2_power"
  input: "debiased_classifier/Adam/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/Adam/update"
  op: "NoOp"
  input: "^debiased_classifier/Adam/Assign"
  input: "^debiased_classifier/Adam/Assign_1"
  input: "^debiased_classifier/Adam/update_debiased_classifier/classifier_model/linear/bias/ApplyAdam"
  input: "^debiased_classifier/Adam/update_debiased_classifier/classifier_model/linear/kernel/ApplyAdam"
  input: "^debiased_classifier/Adam/update_debiased_classifier/classifier_model/linear_1/bias/ApplyAdam"
  input: "^debiased_classifier/Adam/update_debiased_classifier/classifier_model/linear_1/kernel/ApplyAdam"
  input: "^debiased_classifier/Adam/update_debiased_classifier/classifier_model/linear_2/bias/ApplyAdam"
  input: "^debiased_classifier/Adam/update_debiased_classifier/classifier_model/linear_2/kernel/ApplyAdam"
  input: "^debiased_classifier/Adam/update_debiased_classifier/classifier_model/linear_3/bias/ApplyAdam"
  input: "^debiased_classifier/Adam/update_debiased_classifier/classifier_model/linear_3/kernel/ApplyAdam"
  input: "^debiased_classifier/Adam/update_debiased_classifier/classifier_model/linear_4/bias/ApplyAdam"
  input: "^debiased_classifier/Adam/update_debiased_classifier/classifier_model/linear_4/kernel/ApplyAdam"
  input: "^debiased_classifier/Adam/update_debiased_classifier/classifier_model/linear_5/bias/ApplyAdam"
  input: "^debiased_classifier/Adam/update_debiased_classifier/classifier_model/linear_5/kernel/ApplyAdam"
}
node {
  name: "debiased_classifier/Adam/value"
  op: "Const"
  input: "^debiased_classifier/Adam/update"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/Variable"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "debiased_classifier/Adam"
  op: "AssignAdd"
  input: "debiased_classifier/Variable"
  input: "debiased_classifier/Adam/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/Shape"
  op: "Const"
  input: "^debiased_classifier/Adam"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/grad_ys_0"
  op: "Const"
  input: "^debiased_classifier/Adam"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/Fill"
  op: "Fill"
  input: "debiased_classifier/gradients_2/Shape"
  input: "debiased_classifier/gradients_2/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/Mean_1_grad/Reshape/shape"
  op: "Const"
  input: "^debiased_classifier/Adam"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/Mean_1_grad/Reshape"
  op: "Reshape"
  input: "debiased_classifier/gradients_2/Fill"
  input: "debiased_classifier/gradients_2/debiased_classifier/Mean_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/Mean_1_grad/Shape"
  op: "Shape"
  input: "debiased_classifier/logistic_loss_1"
  input: "^debiased_classifier/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/Mean_1_grad/Tile"
  op: "Tile"
  input: "debiased_classifier/gradients_2/debiased_classifier/Mean_1_grad/Reshape"
  input: "debiased_classifier/gradients_2/debiased_classifier/Mean_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/Mean_1_grad/Shape_1"
  op: "Shape"
  input: "debiased_classifier/logistic_loss_1"
  input: "^debiased_classifier/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/Mean_1_grad/Shape_2"
  op: "Const"
  input: "^debiased_classifier/Adam"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/Mean_1_grad/Const"
  op: "Const"
  input: "^debiased_classifier/Adam"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/Mean_1_grad/Prod"
  op: "Prod"
  input: "debiased_classifier/gradients_2/debiased_classifier/Mean_1_grad/Shape_1"
  input: "debiased_classifier/gradients_2/debiased_classifier/Mean_1_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/Mean_1_grad/Const_1"
  op: "Const"
  input: "^debiased_classifier/Adam"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/Mean_1_grad/Prod_1"
  op: "Prod"
  input: "debiased_classifier/gradients_2/debiased_classifier/Mean_1_grad/Shape_2"
  input: "debiased_classifier/gradients_2/debiased_classifier/Mean_1_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/Mean_1_grad/Maximum/y"
  op: "Const"
  input: "^debiased_classifier/Adam"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/Mean_1_grad/Maximum"
  op: "Maximum"
  input: "debiased_classifier/gradients_2/debiased_classifier/Mean_1_grad/Prod_1"
  input: "debiased_classifier/gradients_2/debiased_classifier/Mean_1_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/Mean_1_grad/floordiv"
  op: "FloorDiv"
  input: "debiased_classifier/gradients_2/debiased_classifier/Mean_1_grad/Prod"
  input: "debiased_classifier/gradients_2/debiased_classifier/Mean_1_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/Mean_1_grad/Cast"
  op: "Cast"
  input: "debiased_classifier/gradients_2/debiased_classifier/Mean_1_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/Mean_1_grad/truediv"
  op: "RealDiv"
  input: "debiased_classifier/gradients_2/debiased_classifier/Mean_1_grad/Tile"
  input: "debiased_classifier/gradients_2/debiased_classifier/Mean_1_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1_grad/Shape"
  op: "Shape"
  input: "debiased_classifier/logistic_loss_1/sub"
  input: "^debiased_classifier/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1_grad/Shape_1"
  op: "Shape"
  input: "debiased_classifier/logistic_loss_1/Log1p"
  input: "^debiased_classifier/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1_grad/Shape"
  input: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1_grad/Sum"
  op: "Sum"
  input: "debiased_classifier/gradients_2/debiased_classifier/Mean_1_grad/truediv"
  input: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1_grad/Reshape"
  op: "Reshape"
  input: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1_grad/Sum"
  input: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1_grad/Sum_1"
  op: "Sum"
  input: "debiased_classifier/gradients_2/debiased_classifier/Mean_1_grad/truediv"
  input: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1_grad/Reshape_1"
  op: "Reshape"
  input: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1_grad/Sum_1"
  input: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^debiased_classifier/Adam"
  input: "^debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1_grad/Reshape"
  input: "^debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1_grad/Reshape_1"
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1_grad/Reshape"
  input: "^debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1_grad/Reshape_1"
  input: "^debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/sub_grad/Shape"
  op: "Shape"
  input: "debiased_classifier/logistic_loss_1/Select"
  input: "^debiased_classifier/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/sub_grad/Shape_1"
  op: "Shape"
  input: "debiased_classifier/logistic_loss_1/mul"
  input: "^debiased_classifier/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/sub_grad/Shape"
  input: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/sub_grad/Sum"
  op: "Sum"
  input: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1_grad/tuple/control_dependency"
  input: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/sub_grad/Reshape"
  op: "Reshape"
  input: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/sub_grad/Sum"
  input: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/sub_grad/Neg"
  op: "Neg"
  input: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/sub_grad/Sum_1"
  op: "Sum"
  input: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/sub_grad/Neg"
  input: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/sub_grad/Reshape_1"
  op: "Reshape"
  input: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/sub_grad/Sum_1"
  input: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^debiased_classifier/Adam"
  input: "^debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/sub_grad/Reshape"
  input: "^debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/sub_grad/Reshape_1"
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/sub_grad/Reshape"
  input: "^debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/sub_grad/Reshape"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/sub_grad/Reshape_1"
  input: "^debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/sub_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/Log1p_grad/add/x"
  op: "Const"
  input: "^debiased_classifier/Adam"
  input: "^debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1_grad/tuple/control_dependency_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/Log1p_grad/add"
  op: "AddV2"
  input: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/Log1p_grad/add/x"
  input: "debiased_classifier/logistic_loss_1/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/Log1p_grad/Reciprocal"
  op: "Reciprocal"
  input: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/Log1p_grad/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/Log1p_grad/mul"
  op: "Mul"
  input: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1_grad/tuple/control_dependency_1"
  input: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/Log1p_grad/Reciprocal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/Select_grad/zeros_like"
  op: "ZerosLike"
  input: "debiased_classifier/adversary_model/add_1"
  input: "^debiased_classifier/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/Select_grad/Select"
  op: "Select"
  input: "debiased_classifier/logistic_loss_1/GreaterEqual"
  input: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/sub_grad/tuple/control_dependency"
  input: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/Select_grad/Select_1"
  op: "Select"
  input: "debiased_classifier/logistic_loss_1/GreaterEqual"
  input: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/Select_grad/zeros_like"
  input: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/Select_grad/tuple/group_deps"
  op: "NoOp"
  input: "^debiased_classifier/Adam"
  input: "^debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/Select_grad/Select"
  input: "^debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/Select_grad/Select_1"
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/Select_grad/tuple/control_dependency"
  op: "Identity"
  input: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/Select_grad/Select"
  input: "^debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/Select_grad/Select"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/Select_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/Select_grad/Select_1"
  input: "^debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/Select_grad/Select_1"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/mul_grad/Shape"
  op: "Shape"
  input: "debiased_classifier/adversary_model/add_1"
  input: "^debiased_classifier/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/mul_grad/Shape_1"
  op: "Shape"
  input: "debiased_classifier/Placeholder_1"
  input: "^debiased_classifier/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/mul_grad/Shape"
  input: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/mul_grad/Mul"
  op: "Mul"
  input: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/sub_grad/tuple/control_dependency_1"
  input: "debiased_classifier/Placeholder_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/mul_grad/Sum"
  op: "Sum"
  input: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/mul_grad/Mul"
  input: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/mul_grad/Reshape"
  op: "Reshape"
  input: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/mul_grad/Sum"
  input: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/mul_grad/Mul_1"
  op: "Mul"
  input: "debiased_classifier/adversary_model/add_1"
  input: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/sub_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/mul_grad/Sum_1"
  op: "Sum"
  input: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/mul_grad/Mul_1"
  input: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/mul_grad/Reshape_1"
  op: "Reshape"
  input: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/mul_grad/Sum_1"
  input: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^debiased_classifier/Adam"
  input: "^debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/mul_grad/Reshape"
  input: "^debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/mul_grad/Reshape_1"
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/mul_grad/Reshape"
  input: "^debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/mul_grad/Reshape_1"
  input: "^debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/Exp_grad/mul"
  op: "Mul"
  input: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/Log1p_grad/mul"
  input: "debiased_classifier/logistic_loss_1/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/Select_1_grad/zeros_like"
  op: "ZerosLike"
  input: "debiased_classifier/logistic_loss_1/Neg"
  input: "^debiased_classifier/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/Select_1_grad/Select"
  op: "Select"
  input: "debiased_classifier/logistic_loss_1/GreaterEqual"
  input: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/Exp_grad/mul"
  input: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/Select_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/Select_1_grad/Select_1"
  op: "Select"
  input: "debiased_classifier/logistic_loss_1/GreaterEqual"
  input: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/Select_1_grad/zeros_like"
  input: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/Exp_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/Select_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^debiased_classifier/Adam"
  input: "^debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/Select_1_grad/Select"
  input: "^debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/Select_1_grad/Select_1"
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/Select_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/Select_1_grad/Select"
  input: "^debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/Select_1_grad/Select"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/Select_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/Select_1_grad/Select_1"
  input: "^debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/Select_1_grad/Select_1"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/Neg_grad/Neg"
  op: "Neg"
  input: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/Select_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/AddN"
  op: "AddN"
  input: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/Select_grad/tuple/control_dependency"
  input: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/mul_grad/tuple/control_dependency"
  input: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/Select_1_grad/tuple/control_dependency_1"
  input: "debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/Neg_grad/Neg"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients_2/debiased_classifier/logistic_loss_1/Select_grad/Select"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/add_1_grad/Shape"
  op: "Shape"
  input: "debiased_classifier/adversary_model/MatMul"
  input: "^debiased_classifier/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/add_1_grad/Shape_1"
  op: "Shape"
  input: "debiased_classifier/adversary_model/b2/read"
  input: "^debiased_classifier/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/add_1_grad/Shape"
  input: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/add_1_grad/Sum"
  op: "Sum"
  input: "debiased_classifier/gradients_2/AddN"
  input: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/add_1_grad/Reshape"
  op: "Reshape"
  input: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/add_1_grad/Sum"
  input: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/add_1_grad/Sum_1"
  op: "Sum"
  input: "debiased_classifier/gradients_2/AddN"
  input: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/add_1_grad/Sum_1"
  input: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^debiased_classifier/Adam"
  input: "^debiased_classifier/gradients_2/debiased_classifier/adversary_model/add_1_grad/Reshape"
  input: "^debiased_classifier/gradients_2/debiased_classifier/adversary_model/add_1_grad/Reshape_1"
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/add_1_grad/Reshape"
  input: "^debiased_classifier/gradients_2/debiased_classifier/adversary_model/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients_2/debiased_classifier/adversary_model/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/add_1_grad/Reshape_1"
  input: "^debiased_classifier/gradients_2/debiased_classifier/adversary_model/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients_2/debiased_classifier/adversary_model/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/MatMul_grad/MatMul"
  op: "MatMul"
  input: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/add_1_grad/tuple/control_dependency"
  input: "debiased_classifier/adversary_model/W2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "debiased_classifier/adversary_model/concat"
  input: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^debiased_classifier/Adam"
  input: "^debiased_classifier/gradients_2/debiased_classifier/adversary_model/MatMul_grad/MatMul"
  input: "^debiased_classifier/gradients_2/debiased_classifier/adversary_model/MatMul_grad/MatMul_1"
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/MatMul_grad/MatMul"
  input: "^debiased_classifier/gradients_2/debiased_classifier/adversary_model/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients_2/debiased_classifier/adversary_model/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/MatMul_grad/MatMul_1"
  input: "^debiased_classifier/gradients_2/debiased_classifier/adversary_model/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients_2/debiased_classifier/adversary_model/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/concat_grad/Rank"
  op: "Const"
  input: "^debiased_classifier/Adam"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/concat_grad/mod"
  op: "FloorMod"
  input: "debiased_classifier/adversary_model/concat/axis"
  input: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/concat_grad/Shape"
  op: "Shape"
  input: "debiased_classifier/adversary_model/Sigmoid"
  input: "^debiased_classifier/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/concat_grad/ShapeN"
  op: "ShapeN"
  input: "debiased_classifier/adversary_model/Sigmoid"
  input: "debiased_classifier/adversary_model/mul_1"
  input: "debiased_classifier/adversary_model/mul_2"
  input: "^debiased_classifier/Adam"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/concat_grad/mod"
  input: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/concat_grad/ShapeN"
  input: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/concat_grad/ShapeN:1"
  input: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/concat_grad/ShapeN:2"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/concat_grad/Slice"
  op: "Slice"
  input: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/MatMul_grad/tuple/control_dependency"
  input: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/concat_grad/ConcatOffset"
  input: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/concat_grad/Slice_1"
  op: "Slice"
  input: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/MatMul_grad/tuple/control_dependency"
  input: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/concat_grad/ConcatOffset:1"
  input: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/concat_grad/Slice_2"
  op: "Slice"
  input: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/MatMul_grad/tuple/control_dependency"
  input: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/concat_grad/ConcatOffset:2"
  input: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/concat_grad/ShapeN:2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^debiased_classifier/Adam"
  input: "^debiased_classifier/gradients_2/debiased_classifier/adversary_model/concat_grad/Slice"
  input: "^debiased_classifier/gradients_2/debiased_classifier/adversary_model/concat_grad/Slice_1"
  input: "^debiased_classifier/gradients_2/debiased_classifier/adversary_model/concat_grad/Slice_2"
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/concat_grad/Slice"
  input: "^debiased_classifier/gradients_2/debiased_classifier/adversary_model/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients_2/debiased_classifier/adversary_model/concat_grad/Slice"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/concat_grad/Slice_1"
  input: "^debiased_classifier/gradients_2/debiased_classifier/adversary_model/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients_2/debiased_classifier/adversary_model/concat_grad/Slice_1"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/concat_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/concat_grad/Slice_2"
  input: "^debiased_classifier/gradients_2/debiased_classifier/adversary_model/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients_2/debiased_classifier/adversary_model/concat_grad/Slice_2"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_1_grad/Shape"
  op: "Shape"
  input: "debiased_classifier/adversary_model/Sigmoid"
  input: "^debiased_classifier/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_1_grad/Shape_1"
  op: "Shape"
  input: "debiased_classifier/Placeholder_2"
  input: "^debiased_classifier/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_1_grad/Shape"
  input: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_1_grad/Mul"
  op: "Mul"
  input: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/concat_grad/tuple/control_dependency_1"
  input: "debiased_classifier/Placeholder_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_1_grad/Sum"
  op: "Sum"
  input: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_1_grad/Mul"
  input: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_1_grad/Reshape"
  op: "Reshape"
  input: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_1_grad/Sum"
  input: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_1_grad/Mul_1"
  op: "Mul"
  input: "debiased_classifier/adversary_model/Sigmoid"
  input: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/concat_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_1_grad/Sum_1"
  op: "Sum"
  input: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_1_grad/Mul_1"
  input: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_1_grad/Sum_1"
  input: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^debiased_classifier/Adam"
  input: "^debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_1_grad/Reshape"
  input: "^debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_1_grad/Reshape_1"
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_1_grad/Reshape"
  input: "^debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_1_grad/Reshape_1"
  input: "^debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_2_grad/Shape"
  op: "Shape"
  input: "debiased_classifier/adversary_model/Sigmoid"
  input: "^debiased_classifier/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_2_grad/Shape_1"
  op: "Shape"
  input: "debiased_classifier/adversary_model/sub"
  input: "^debiased_classifier/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_2_grad/Shape"
  input: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_2_grad/Mul"
  op: "Mul"
  input: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/concat_grad/tuple/control_dependency_2"
  input: "debiased_classifier/adversary_model/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_2_grad/Sum"
  op: "Sum"
  input: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_2_grad/Mul"
  input: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_2_grad/Reshape"
  op: "Reshape"
  input: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_2_grad/Sum"
  input: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_2_grad/Mul_1"
  op: "Mul"
  input: "debiased_classifier/adversary_model/Sigmoid"
  input: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/concat_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_2_grad/Sum_1"
  op: "Sum"
  input: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_2_grad/Mul_1"
  input: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_2_grad/Sum_1"
  input: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^debiased_classifier/Adam"
  input: "^debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_2_grad/Reshape"
  input: "^debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_2_grad/Reshape_1"
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_2_grad/Reshape"
  input: "^debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_2_grad/Reshape_1"
  input: "^debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/AddN_1"
  op: "AddN"
  input: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/concat_grad/tuple/control_dependency"
  input: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_1_grad/tuple/control_dependency"
  input: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_2_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients_2/debiased_classifier/adversary_model/concat_grad/Slice"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "debiased_classifier/adversary_model/Sigmoid"
  input: "debiased_classifier/gradients_2/AddN_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_grad/Shape"
  op: "Shape"
  input: "debiased_classifier/adversary_model/add"
  input: "^debiased_classifier/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_grad/Shape_1"
  op: "Shape"
  input: "debiased_classifier/classifier_model/add_17"
  input: "^debiased_classifier/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_grad/Shape"
  input: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_grad/Mul"
  op: "Mul"
  input: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/Sigmoid_grad/SigmoidGrad"
  input: "debiased_classifier/classifier_model/add_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_grad/Sum"
  op: "Sum"
  input: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_grad/Mul"
  input: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_grad/Reshape"
  op: "Reshape"
  input: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_grad/Sum"
  input: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_grad/Mul_1"
  op: "Mul"
  input: "debiased_classifier/adversary_model/add"
  input: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_grad/Sum_1"
  op: "Sum"
  input: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_grad/Mul_1"
  input: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_grad/Reshape_1"
  op: "Reshape"
  input: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_grad/Sum_1"
  input: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^debiased_classifier/Adam"
  input: "^debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_grad/Reshape"
  input: "^debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_grad/Reshape_1"
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_grad/Reshape"
  input: "^debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_grad/Reshape_1"
  input: "^debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^debiased_classifier/Adam"
  input: "^debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_grad/tuple/control_dependency"
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_grad/tuple/control_dependency"
  input: "^debiased_classifier/gradients_2/debiased_classifier/adversary_model/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_grad/tuple/control_dependency"
  input: "^debiased_classifier/gradients_2/debiased_classifier/adversary_model/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/gradients_2/debiased_classifier/adversary_model/mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/Abs_grad/Sign"
  op: "Sign"
  input: "debiased_classifier/adversary_model/c/read"
  input: "^debiased_classifier/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/Abs_grad/mul"
  op: "Mul"
  input: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/add_grad/tuple/control_dependency_1"
  input: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/Abs_grad/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "debiased_classifier/beta1_power_1/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/adversary_model/W2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "debiased_classifier/beta1_power_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/adversary_model/W2"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "debiased_classifier/beta1_power_1/Assign"
  op: "Assign"
  input: "debiased_classifier/beta1_power_1"
  input: "debiased_classifier/beta1_power_1/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/adversary_model/W2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/beta1_power_1/read"
  op: "Identity"
  input: "debiased_classifier/beta1_power_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/adversary_model/W2"
      }
    }
  }
}
node {
  name: "debiased_classifier/beta2_power_1/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/adversary_model/W2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "debiased_classifier/beta2_power_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/adversary_model/W2"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "debiased_classifier/beta2_power_1/Assign"
  op: "Assign"
  input: "debiased_classifier/beta2_power_1"
  input: "debiased_classifier/beta2_power_1/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/adversary_model/W2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/beta2_power_1/read"
  op: "Identity"
  input: "debiased_classifier/beta2_power_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/adversary_model/W2"
      }
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/adversary_model/c/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/adversary_model/c"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/adversary_model/c/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/adversary_model/c"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/adversary_model/c/Adam/Assign"
  op: "Assign"
  input: "debiased_classifier/debiased_classifier/adversary_model/c/Adam"
  input: "debiased_classifier/debiased_classifier/adversary_model/c/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/adversary_model/c"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/adversary_model/c/Adam/read"
  op: "Identity"
  input: "debiased_classifier/debiased_classifier/adversary_model/c/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/adversary_model/c"
      }
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/adversary_model/c/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/adversary_model/c"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/adversary_model/c/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/adversary_model/c"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/adversary_model/c/Adam_1/Assign"
  op: "Assign"
  input: "debiased_classifier/debiased_classifier/adversary_model/c/Adam_1"
  input: "debiased_classifier/debiased_classifier/adversary_model/c/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/adversary_model/c"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/adversary_model/c/Adam_1/read"
  op: "Identity"
  input: "debiased_classifier/debiased_classifier/adversary_model/c/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/adversary_model/c"
      }
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/adversary_model/W2/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/adversary_model/W2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/adversary_model/W2/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/adversary_model/W2"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/adversary_model/W2/Adam/Assign"
  op: "Assign"
  input: "debiased_classifier/debiased_classifier/adversary_model/W2/Adam"
  input: "debiased_classifier/debiased_classifier/adversary_model/W2/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/adversary_model/W2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/adversary_model/W2/Adam/read"
  op: "Identity"
  input: "debiased_classifier/debiased_classifier/adversary_model/W2/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/adversary_model/W2"
      }
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/adversary_model/W2/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/adversary_model/W2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/adversary_model/W2/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/adversary_model/W2"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/adversary_model/W2/Adam_1/Assign"
  op: "Assign"
  input: "debiased_classifier/debiased_classifier/adversary_model/W2/Adam_1"
  input: "debiased_classifier/debiased_classifier/adversary_model/W2/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/adversary_model/W2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/adversary_model/W2/Adam_1/read"
  op: "Identity"
  input: "debiased_classifier/debiased_classifier/adversary_model/W2/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/adversary_model/W2"
      }
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/adversary_model/b2/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/adversary_model/b2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/adversary_model/b2/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/adversary_model/b2"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/adversary_model/b2/Adam/Assign"
  op: "Assign"
  input: "debiased_classifier/debiased_classifier/adversary_model/b2/Adam"
  input: "debiased_classifier/debiased_classifier/adversary_model/b2/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/adversary_model/b2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/adversary_model/b2/Adam/read"
  op: "Identity"
  input: "debiased_classifier/debiased_classifier/adversary_model/b2/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/adversary_model/b2"
      }
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/adversary_model/b2/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/adversary_model/b2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/adversary_model/b2/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/adversary_model/b2"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/adversary_model/b2/Adam_1/Assign"
  op: "Assign"
  input: "debiased_classifier/debiased_classifier/adversary_model/b2/Adam_1"
  input: "debiased_classifier/debiased_classifier/adversary_model/b2/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/adversary_model/b2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/debiased_classifier/adversary_model/b2/Adam_1/read"
  op: "Identity"
  input: "debiased_classifier/debiased_classifier/adversary_model/b2/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/adversary_model/b2"
      }
    }
  }
}
node {
  name: "debiased_classifier/Adam_1/beta1"
  op: "Const"
  input: "^debiased_classifier/Adam"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "debiased_classifier/Adam_1/beta2"
  op: "Const"
  input: "^debiased_classifier/Adam"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "debiased_classifier/Adam_1/epsilon"
  op: "Const"
  input: "^debiased_classifier/Adam"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "debiased_classifier/Adam_1/update_debiased_classifier/adversary_model/c/ApplyAdam"
  op: "ApplyAdam"
  input: "debiased_classifier/adversary_model/c"
  input: "debiased_classifier/debiased_classifier/adversary_model/c/Adam"
  input: "debiased_classifier/debiased_classifier/adversary_model/c/Adam_1"
  input: "debiased_classifier/beta1_power_1/read"
  input: "debiased_classifier/beta2_power_1/read"
  input: "debiased_classifier/ExponentialDecay"
  input: "debiased_classifier/Adam_1/beta1"
  input: "debiased_classifier/Adam_1/beta2"
  input: "debiased_classifier/Adam_1/epsilon"
  input: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/Abs_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/adversary_model/c"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/Adam_1/update_debiased_classifier/adversary_model/W2/ApplyAdam"
  op: "ApplyAdam"
  input: "debiased_classifier/adversary_model/W2"
  input: "debiased_classifier/debiased_classifier/adversary_model/W2/Adam"
  input: "debiased_classifier/debiased_classifier/adversary_model/W2/Adam_1"
  input: "debiased_classifier/beta1_power_1/read"
  input: "debiased_classifier/beta2_power_1/read"
  input: "debiased_classifier/ExponentialDecay"
  input: "debiased_classifier/Adam_1/beta1"
  input: "debiased_classifier/Adam_1/beta2"
  input: "debiased_classifier/Adam_1/epsilon"
  input: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/adversary_model/W2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/Adam_1/update_debiased_classifier/adversary_model/b2/ApplyAdam"
  op: "ApplyAdam"
  input: "debiased_classifier/adversary_model/b2"
  input: "debiased_classifier/debiased_classifier/adversary_model/b2/Adam"
  input: "debiased_classifier/debiased_classifier/adversary_model/b2/Adam_1"
  input: "debiased_classifier/beta1_power_1/read"
  input: "debiased_classifier/beta2_power_1/read"
  input: "debiased_classifier/ExponentialDecay"
  input: "debiased_classifier/Adam_1/beta1"
  input: "debiased_classifier/Adam_1/beta2"
  input: "debiased_classifier/Adam_1/epsilon"
  input: "debiased_classifier/gradients_2/debiased_classifier/adversary_model/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/adversary_model/b2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "debiased_classifier/Adam_1/mul"
  op: "Mul"
  input: "debiased_classifier/beta1_power_1/read"
  input: "debiased_classifier/Adam_1/beta1"
  input: "^debiased_classifier/Adam_1/update_debiased_classifier/adversary_model/W2/ApplyAdam"
  input: "^debiased_classifier/Adam_1/update_debiased_classifier/adversary_model/b2/ApplyAdam"
  input: "^debiased_classifier/Adam_1/update_debiased_classifier/adversary_model/c/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/adversary_model/W2"
      }
    }
  }
}
node {
  name: "debiased_classifier/Adam_1/Assign"
  op: "Assign"
  input: "debiased_classifier/beta1_power_1"
  input: "debiased_classifier/Adam_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/adversary_model/W2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/Adam_1/mul_1"
  op: "Mul"
  input: "debiased_classifier/beta2_power_1/read"
  input: "debiased_classifier/Adam_1/beta2"
  input: "^debiased_classifier/Adam_1/update_debiased_classifier/adversary_model/W2/ApplyAdam"
  input: "^debiased_classifier/Adam_1/update_debiased_classifier/adversary_model/b2/ApplyAdam"
  input: "^debiased_classifier/Adam_1/update_debiased_classifier/adversary_model/c/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/adversary_model/W2"
      }
    }
  }
}
node {
  name: "debiased_classifier/Adam_1/Assign_1"
  op: "Assign"
  input: "debiased_classifier/beta2_power_1"
  input: "debiased_classifier/Adam_1/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/adversary_model/W2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/Adam_1"
  op: "NoOp"
  input: "^debiased_classifier/Adam"
  input: "^debiased_classifier/Adam_1/Assign"
  input: "^debiased_classifier/Adam_1/Assign_1"
  input: "^debiased_classifier/Adam_1/update_debiased_classifier/adversary_model/W2/ApplyAdam"
  input: "^debiased_classifier/Adam_1/update_debiased_classifier/adversary_model/b2/ApplyAdam"
  input: "^debiased_classifier/Adam_1/update_debiased_classifier/adversary_model/c/ApplyAdam"
}
node {
  name: "debiased_classifier/init"
  op: "NoOp"
  input: "^debiased_classifier/Variable/Assign"
  input: "^debiased_classifier/adversary_model/W2/Assign"
  input: "^debiased_classifier/adversary_model/b2/Assign"
  input: "^debiased_classifier/adversary_model/c/Assign"
  input: "^debiased_classifier/beta1_power/Assign"
  input: "^debiased_classifier/beta1_power_1/Assign"
  input: "^debiased_classifier/beta2_power/Assign"
  input: "^debiased_classifier/beta2_power_1/Assign"
  input: "^debiased_classifier/classifier_model/linear/bias/Assign"
  input: "^debiased_classifier/classifier_model/linear/kernel/Assign"
  input: "^debiased_classifier/classifier_model/linear_1/bias/Assign"
  input: "^debiased_classifier/classifier_model/linear_1/kernel/Assign"
  input: "^debiased_classifier/classifier_model/linear_2/bias/Assign"
  input: "^debiased_classifier/classifier_model/linear_2/kernel/Assign"
  input: "^debiased_classifier/classifier_model/linear_3/bias/Assign"
  input: "^debiased_classifier/classifier_model/linear_3/kernel/Assign"
  input: "^debiased_classifier/classifier_model/linear_4/bias/Assign"
  input: "^debiased_classifier/classifier_model/linear_4/kernel/Assign"
  input: "^debiased_classifier/classifier_model/linear_5/bias/Assign"
  input: "^debiased_classifier/classifier_model/linear_5/kernel/Assign"
  input: "^debiased_classifier/debiased_classifier/adversary_model/W2/Adam/Assign"
  input: "^debiased_classifier/debiased_classifier/adversary_model/W2/Adam_1/Assign"
  input: "^debiased_classifier/debiased_classifier/adversary_model/b2/Adam/Assign"
  input: "^debiased_classifier/debiased_classifier/adversary_model/b2/Adam_1/Assign"
  input: "^debiased_classifier/debiased_classifier/adversary_model/c/Adam/Assign"
  input: "^debiased_classifier/debiased_classifier/adversary_model/c/Adam_1/Assign"
  input: "^debiased_classifier/debiased_classifier/classifier_model/linear/bias/Adam/Assign"
  input: "^debiased_classifier/debiased_classifier/classifier_model/linear/bias/Adam_1/Assign"
  input: "^debiased_classifier/debiased_classifier/classifier_model/linear/kernel/Adam/Assign"
  input: "^debiased_classifier/debiased_classifier/classifier_model/linear/kernel/Adam_1/Assign"
  input: "^debiased_classifier/debiased_classifier/classifier_model/linear_1/bias/Adam/Assign"
  input: "^debiased_classifier/debiased_classifier/classifier_model/linear_1/bias/Adam_1/Assign"
  input: "^debiased_classifier/debiased_classifier/classifier_model/linear_1/kernel/Adam/Assign"
  input: "^debiased_classifier/debiased_classifier/classifier_model/linear_1/kernel/Adam_1/Assign"
  input: "^debiased_classifier/debiased_classifier/classifier_model/linear_2/bias/Adam/Assign"
  input: "^debiased_classifier/debiased_classifier/classifier_model/linear_2/bias/Adam_1/Assign"
  input: "^debiased_classifier/debiased_classifier/classifier_model/linear_2/kernel/Adam/Assign"
  input: "^debiased_classifier/debiased_classifier/classifier_model/linear_2/kernel/Adam_1/Assign"
  input: "^debiased_classifier/debiased_classifier/classifier_model/linear_3/bias/Adam/Assign"
  input: "^debiased_classifier/debiased_classifier/classifier_model/linear_3/bias/Adam_1/Assign"
  input: "^debiased_classifier/debiased_classifier/classifier_model/linear_3/kernel/Adam/Assign"
  input: "^debiased_classifier/debiased_classifier/classifier_model/linear_3/kernel/Adam_1/Assign"
  input: "^debiased_classifier/debiased_classifier/classifier_model/linear_4/bias/Adam/Assign"
  input: "^debiased_classifier/debiased_classifier/classifier_model/linear_4/bias/Adam_1/Assign"
  input: "^debiased_classifier/debiased_classifier/classifier_model/linear_4/kernel/Adam/Assign"
  input: "^debiased_classifier/debiased_classifier/classifier_model/linear_4/kernel/Adam_1/Assign"
  input: "^debiased_classifier/debiased_classifier/classifier_model/linear_5/bias/Adam/Assign"
  input: "^debiased_classifier/debiased_classifier/classifier_model/linear_5/bias/Adam_1/Assign"
  input: "^debiased_classifier/debiased_classifier/classifier_model/linear_5/kernel/Adam/Assign"
  input: "^debiased_classifier/debiased_classifier/classifier_model/linear_5/kernel/Adam_1/Assign"
}
node {
  name: "debiased_classifier/init_1"
  op: "NoOp"
}
node {
  name: "debiased_classifier/save/filename/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "debiased_classifier/save/filename"
  op: "PlaceholderWithDefault"
  input: "debiased_classifier/save/filename/input"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "debiased_classifier/save/Const"
  op: "PlaceholderWithDefault"
  input: "debiased_classifier/save/filename"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "debiased_classifier/save/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 50
          }
        }
        string_val: "debiased_classifier/Variable"
        string_val: "debiased_classifier/adversary_model/W2"
        string_val: "debiased_classifier/adversary_model/b2"
        string_val: "debiased_classifier/adversary_model/c"
        string_val: "debiased_classifier/beta1_power"
        string_val: "debiased_classifier/beta1_power_1"
        string_val: "debiased_classifier/beta2_power"
        string_val: "debiased_classifier/beta2_power_1"
        string_val: "debiased_classifier/classifier_model/linear/bias"
        string_val: "debiased_classifier/classifier_model/linear/kernel"
        string_val: "debiased_classifier/classifier_model/linear_1/bias"
        string_val: "debiased_classifier/classifier_model/linear_1/kernel"
        string_val: "debiased_classifier/classifier_model/linear_2/bias"
        string_val: "debiased_classifier/classifier_model/linear_2/kernel"
        string_val: "debiased_classifier/classifier_model/linear_3/bias"
        string_val: "debiased_classifier/classifier_model/linear_3/kernel"
        string_val: "debiased_classifier/classifier_model/linear_4/bias"
        string_val: "debiased_classifier/classifier_model/linear_4/kernel"
        string_val: "debiased_classifier/classifier_model/linear_5/bias"
        string_val: "debiased_classifier/classifier_model/linear_5/kernel"
        string_val: "debiased_classifier/debiased_classifier/adversary_model/W2/Adam"
        string_val: "debiased_classifier/debiased_classifier/adversary_model/W2/Adam_1"
        string_val: "debiased_classifier/debiased_classifier/adversary_model/b2/Adam"
        string_val: "debiased_classifier/debiased_classifier/adversary_model/b2/Adam_1"
        string_val: "debiased_classifier/debiased_classifier/adversary_model/c/Adam"
        string_val: "debiased_classifier/debiased_classifier/adversary_model/c/Adam_1"
        string_val: "debiased_classifier/debiased_classifier/classifier_model/linear/bias/Adam"
        string_val: "debiased_classifier/debiased_classifier/classifier_model/linear/bias/Adam_1"
        string_val: "debiased_classifier/debiased_classifier/classifier_model/linear/kernel/Adam"
        string_val: "debiased_classifier/debiased_classifier/classifier_model/linear/kernel/Adam_1"
        string_val: "debiased_classifier/debiased_classifier/classifier_model/linear_1/bias/Adam"
        string_val: "debiased_classifier/debiased_classifier/classifier_model/linear_1/bias/Adam_1"
        string_val: "debiased_classifier/debiased_classifier/classifier_model/linear_1/kernel/Adam"
        string_val: "debiased_classifier/debiased_classifier/classifier_model/linear_1/kernel/Adam_1"
        string_val: "debiased_classifier/debiased_classifier/classifier_model/linear_2/bias/Adam"
        string_val: "debiased_classifier/debiased_classifier/classifier_model/linear_2/bias/Adam_1"
        string_val: "debiased_classifier/debiased_classifier/classifier_model/linear_2/kernel/Adam"
        string_val: "debiased_classifier/debiased_classifier/classifier_model/linear_2/kernel/Adam_1"
        string_val: "debiased_classifier/debiased_classifier/classifier_model/linear_3/bias/Adam"
        string_val: "debiased_classifier/debiased_classifier/classifier_model/linear_3/bias/Adam_1"
        string_val: "debiased_classifier/debiased_classifier/classifier_model/linear_3/kernel/Adam"
        string_val: "debiased_classifier/debiased_classifier/classifier_model/linear_3/kernel/Adam_1"
        string_val: "debiased_classifier/debiased_classifier/classifier_model/linear_4/bias/Adam"
        string_val: "debiased_classifier/debiased_classifier/classifier_model/linear_4/bias/Adam_1"
        string_val: "debiased_classifier/debiased_classifier/classifier_model/linear_4/kernel/Adam"
        string_val: "debiased_classifier/debiased_classifier/classifier_model/linear_4/kernel/Adam_1"
        string_val: "debiased_classifier/debiased_classifier/classifier_model/linear_5/bias/Adam"
        string_val: "debiased_classifier/debiased_classifier/classifier_model/linear_5/bias/Adam_1"
        string_val: "debiased_classifier/debiased_classifier/classifier_model/linear_5/kernel/Adam"
        string_val: "debiased_classifier/debiased_classifier/classifier_model/linear_5/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "debiased_classifier/save/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 50
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "debiased_classifier/save/SaveV2"
  op: "SaveV2"
  input: "debiased_classifier/save/Const"
  input: "debiased_classifier/save/SaveV2/tensor_names"
  input: "debiased_classifier/save/SaveV2/shape_and_slices"
  input: "debiased_classifier/Variable"
  input: "debiased_classifier/adversary_model/W2"
  input: "debiased_classifier/adversary_model/b2"
  input: "debiased_classifier/adversary_model/c"
  input: "debiased_classifier/beta1_power"
  input: "debiased_classifier/beta1_power_1"
  input: "debiased_classifier/beta2_power"
  input: "debiased_classifier/beta2_power_1"
  input: "debiased_classifier/classifier_model/linear/bias"
  input: "debiased_classifier/classifier_model/linear/kernel"
  input: "debiased_classifier/classifier_model/linear_1/bias"
  input: "debiased_classifier/classifier_model/linear_1/kernel"
  input: "debiased_classifier/classifier_model/linear_2/bias"
  input: "debiased_classifier/classifier_model/linear_2/kernel"
  input: "debiased_classifier/classifier_model/linear_3/bias"
  input: "debiased_classifier/classifier_model/linear_3/kernel"
  input: "debiased_classifier/classifier_model/linear_4/bias"
  input: "debiased_classifier/classifier_model/linear_4/kernel"
  input: "debiased_classifier/classifier_model/linear_5/bias"
  input: "debiased_classifier/classifier_model/linear_5/kernel"
  input: "debiased_classifier/debiased_classifier/adversary_model/W2/Adam"
  input: "debiased_classifier/debiased_classifier/adversary_model/W2/Adam_1"
  input: "debiased_classifier/debiased_classifier/adversary_model/b2/Adam"
  input: "debiased_classifier/debiased_classifier/adversary_model/b2/Adam_1"
  input: "debiased_classifier/debiased_classifier/adversary_model/c/Adam"
  input: "debiased_classifier/debiased_classifier/adversary_model/c/Adam_1"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear/bias/Adam"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear/bias/Adam_1"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear/kernel/Adam"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear/kernel/Adam_1"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_1/bias/Adam"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_1/bias/Adam_1"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_1/kernel/Adam"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_1/kernel/Adam_1"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_2/bias/Adam"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_2/bias/Adam_1"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_2/kernel/Adam"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_2/kernel/Adam_1"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_3/bias/Adam"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_3/bias/Adam_1"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_3/kernel/Adam"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_3/kernel/Adam_1"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_4/bias/Adam"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_4/bias/Adam_1"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_4/kernel/Adam"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_4/kernel/Adam_1"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_5/bias/Adam"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_5/bias/Adam_1"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_5/kernel/Adam"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_5/kernel/Adam_1"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_INT32
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "debiased_classifier/save/control_dependency"
  op: "Identity"
  input: "debiased_classifier/save/Const"
  input: "^debiased_classifier/save/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/save/Const"
      }
    }
  }
}
node {
  name: "debiased_classifier/save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 50
          }
        }
        string_val: "debiased_classifier/Variable"
        string_val: "debiased_classifier/adversary_model/W2"
        string_val: "debiased_classifier/adversary_model/b2"
        string_val: "debiased_classifier/adversary_model/c"
        string_val: "debiased_classifier/beta1_power"
        string_val: "debiased_classifier/beta1_power_1"
        string_val: "debiased_classifier/beta2_power"
        string_val: "debiased_classifier/beta2_power_1"
        string_val: "debiased_classifier/classifier_model/linear/bias"
        string_val: "debiased_classifier/classifier_model/linear/kernel"
        string_val: "debiased_classifier/classifier_model/linear_1/bias"
        string_val: "debiased_classifier/classifier_model/linear_1/kernel"
        string_val: "debiased_classifier/classifier_model/linear_2/bias"
        string_val: "debiased_classifier/classifier_model/linear_2/kernel"
        string_val: "debiased_classifier/classifier_model/linear_3/bias"
        string_val: "debiased_classifier/classifier_model/linear_3/kernel"
        string_val: "debiased_classifier/classifier_model/linear_4/bias"
        string_val: "debiased_classifier/classifier_model/linear_4/kernel"
        string_val: "debiased_classifier/classifier_model/linear_5/bias"
        string_val: "debiased_classifier/classifier_model/linear_5/kernel"
        string_val: "debiased_classifier/debiased_classifier/adversary_model/W2/Adam"
        string_val: "debiased_classifier/debiased_classifier/adversary_model/W2/Adam_1"
        string_val: "debiased_classifier/debiased_classifier/adversary_model/b2/Adam"
        string_val: "debiased_classifier/debiased_classifier/adversary_model/b2/Adam_1"
        string_val: "debiased_classifier/debiased_classifier/adversary_model/c/Adam"
        string_val: "debiased_classifier/debiased_classifier/adversary_model/c/Adam_1"
        string_val: "debiased_classifier/debiased_classifier/classifier_model/linear/bias/Adam"
        string_val: "debiased_classifier/debiased_classifier/classifier_model/linear/bias/Adam_1"
        string_val: "debiased_classifier/debiased_classifier/classifier_model/linear/kernel/Adam"
        string_val: "debiased_classifier/debiased_classifier/classifier_model/linear/kernel/Adam_1"
        string_val: "debiased_classifier/debiased_classifier/classifier_model/linear_1/bias/Adam"
        string_val: "debiased_classifier/debiased_classifier/classifier_model/linear_1/bias/Adam_1"
        string_val: "debiased_classifier/debiased_classifier/classifier_model/linear_1/kernel/Adam"
        string_val: "debiased_classifier/debiased_classifier/classifier_model/linear_1/kernel/Adam_1"
        string_val: "debiased_classifier/debiased_classifier/classifier_model/linear_2/bias/Adam"
        string_val: "debiased_classifier/debiased_classifier/classifier_model/linear_2/bias/Adam_1"
        string_val: "debiased_classifier/debiased_classifier/classifier_model/linear_2/kernel/Adam"
        string_val: "debiased_classifier/debiased_classifier/classifier_model/linear_2/kernel/Adam_1"
        string_val: "debiased_classifier/debiased_classifier/classifier_model/linear_3/bias/Adam"
        string_val: "debiased_classifier/debiased_classifier/classifier_model/linear_3/bias/Adam_1"
        string_val: "debiased_classifier/debiased_classifier/classifier_model/linear_3/kernel/Adam"
        string_val: "debiased_classifier/debiased_classifier/classifier_model/linear_3/kernel/Adam_1"
        string_val: "debiased_classifier/debiased_classifier/classifier_model/linear_4/bias/Adam"
        string_val: "debiased_classifier/debiased_classifier/classifier_model/linear_4/bias/Adam_1"
        string_val: "debiased_classifier/debiased_classifier/classifier_model/linear_4/kernel/Adam"
        string_val: "debiased_classifier/debiased_classifier/classifier_model/linear_4/kernel/Adam_1"
        string_val: "debiased_classifier/debiased_classifier/classifier_model/linear_5/bias/Adam"
        string_val: "debiased_classifier/debiased_classifier/classifier_model/linear_5/bias/Adam_1"
        string_val: "debiased_classifier/debiased_classifier/classifier_model/linear_5/kernel/Adam"
        string_val: "debiased_classifier/debiased_classifier/classifier_model/linear_5/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "debiased_classifier/save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 50
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "debiased_classifier/save/RestoreV2"
  op: "RestoreV2"
  input: "debiased_classifier/save/Const"
  input: "debiased_classifier/save/RestoreV2/tensor_names"
  input: "debiased_classifier/save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_INT32
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "debiased_classifier/save/Assign"
  op: "Assign"
  input: "debiased_classifier/Variable"
  input: "debiased_classifier/save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/save/Assign_1"
  op: "Assign"
  input: "debiased_classifier/adversary_model/W2"
  input: "debiased_classifier/save/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/adversary_model/W2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/save/Assign_2"
  op: "Assign"
  input: "debiased_classifier/adversary_model/b2"
  input: "debiased_classifier/save/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/adversary_model/b2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/save/Assign_3"
  op: "Assign"
  input: "debiased_classifier/adversary_model/c"
  input: "debiased_classifier/save/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/adversary_model/c"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/save/Assign_4"
  op: "Assign"
  input: "debiased_classifier/beta1_power"
  input: "debiased_classifier/save/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/save/Assign_5"
  op: "Assign"
  input: "debiased_classifier/beta1_power_1"
  input: "debiased_classifier/save/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/adversary_model/W2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/save/Assign_6"
  op: "Assign"
  input: "debiased_classifier/beta2_power"
  input: "debiased_classifier/save/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/save/Assign_7"
  op: "Assign"
  input: "debiased_classifier/beta2_power_1"
  input: "debiased_classifier/save/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/adversary_model/W2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/save/Assign_8"
  op: "Assign"
  input: "debiased_classifier/classifier_model/linear/bias"
  input: "debiased_classifier/save/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/save/Assign_9"
  op: "Assign"
  input: "debiased_classifier/classifier_model/linear/kernel"
  input: "debiased_classifier/save/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/save/Assign_10"
  op: "Assign"
  input: "debiased_classifier/classifier_model/linear_1/bias"
  input: "debiased_classifier/save/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/save/Assign_11"
  op: "Assign"
  input: "debiased_classifier/classifier_model/linear_1/kernel"
  input: "debiased_classifier/save/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/save/Assign_12"
  op: "Assign"
  input: "debiased_classifier/classifier_model/linear_2/bias"
  input: "debiased_classifier/save/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/save/Assign_13"
  op: "Assign"
  input: "debiased_classifier/classifier_model/linear_2/kernel"
  input: "debiased_classifier/save/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/save/Assign_14"
  op: "Assign"
  input: "debiased_classifier/classifier_model/linear_3/bias"
  input: "debiased_classifier/save/RestoreV2:14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_3/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/save/Assign_15"
  op: "Assign"
  input: "debiased_classifier/classifier_model/linear_3/kernel"
  input: "debiased_classifier/save/RestoreV2:15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/save/Assign_16"
  op: "Assign"
  input: "debiased_classifier/classifier_model/linear_4/bias"
  input: "debiased_classifier/save/RestoreV2:16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_4/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/save/Assign_17"
  op: "Assign"
  input: "debiased_classifier/classifier_model/linear_4/kernel"
  input: "debiased_classifier/save/RestoreV2:17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_4/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/save/Assign_18"
  op: "Assign"
  input: "debiased_classifier/classifier_model/linear_5/bias"
  input: "debiased_classifier/save/RestoreV2:18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_5/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/save/Assign_19"
  op: "Assign"
  input: "debiased_classifier/classifier_model/linear_5/kernel"
  input: "debiased_classifier/save/RestoreV2:19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_5/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/save/Assign_20"
  op: "Assign"
  input: "debiased_classifier/debiased_classifier/adversary_model/W2/Adam"
  input: "debiased_classifier/save/RestoreV2:20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/adversary_model/W2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/save/Assign_21"
  op: "Assign"
  input: "debiased_classifier/debiased_classifier/adversary_model/W2/Adam_1"
  input: "debiased_classifier/save/RestoreV2:21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/adversary_model/W2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/save/Assign_22"
  op: "Assign"
  input: "debiased_classifier/debiased_classifier/adversary_model/b2/Adam"
  input: "debiased_classifier/save/RestoreV2:22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/adversary_model/b2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/save/Assign_23"
  op: "Assign"
  input: "debiased_classifier/debiased_classifier/adversary_model/b2/Adam_1"
  input: "debiased_classifier/save/RestoreV2:23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/adversary_model/b2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/save/Assign_24"
  op: "Assign"
  input: "debiased_classifier/debiased_classifier/adversary_model/c/Adam"
  input: "debiased_classifier/save/RestoreV2:24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/adversary_model/c"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/save/Assign_25"
  op: "Assign"
  input: "debiased_classifier/debiased_classifier/adversary_model/c/Adam_1"
  input: "debiased_classifier/save/RestoreV2:25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/adversary_model/c"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/save/Assign_26"
  op: "Assign"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear/bias/Adam"
  input: "debiased_classifier/save/RestoreV2:26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/save/Assign_27"
  op: "Assign"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear/bias/Adam_1"
  input: "debiased_classifier/save/RestoreV2:27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/save/Assign_28"
  op: "Assign"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear/kernel/Adam"
  input: "debiased_classifier/save/RestoreV2:28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/save/Assign_29"
  op: "Assign"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear/kernel/Adam_1"
  input: "debiased_classifier/save/RestoreV2:29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/save/Assign_30"
  op: "Assign"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_1/bias/Adam"
  input: "debiased_classifier/save/RestoreV2:30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/save/Assign_31"
  op: "Assign"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_1/bias/Adam_1"
  input: "debiased_classifier/save/RestoreV2:31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/save/Assign_32"
  op: "Assign"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_1/kernel/Adam"
  input: "debiased_classifier/save/RestoreV2:32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/save/Assign_33"
  op: "Assign"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_1/kernel/Adam_1"
  input: "debiased_classifier/save/RestoreV2:33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/save/Assign_34"
  op: "Assign"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_2/bias/Adam"
  input: "debiased_classifier/save/RestoreV2:34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/save/Assign_35"
  op: "Assign"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_2/bias/Adam_1"
  input: "debiased_classifier/save/RestoreV2:35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/save/Assign_36"
  op: "Assign"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_2/kernel/Adam"
  input: "debiased_classifier/save/RestoreV2:36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/save/Assign_37"
  op: "Assign"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_2/kernel/Adam_1"
  input: "debiased_classifier/save/RestoreV2:37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/save/Assign_38"
  op: "Assign"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_3/bias/Adam"
  input: "debiased_classifier/save/RestoreV2:38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_3/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/save/Assign_39"
  op: "Assign"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_3/bias/Adam_1"
  input: "debiased_classifier/save/RestoreV2:39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_3/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/save/Assign_40"
  op: "Assign"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_3/kernel/Adam"
  input: "debiased_classifier/save/RestoreV2:40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/save/Assign_41"
  op: "Assign"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_3/kernel/Adam_1"
  input: "debiased_classifier/save/RestoreV2:41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/save/Assign_42"
  op: "Assign"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_4/bias/Adam"
  input: "debiased_classifier/save/RestoreV2:42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_4/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/save/Assign_43"
  op: "Assign"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_4/bias/Adam_1"
  input: "debiased_classifier/save/RestoreV2:43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_4/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/save/Assign_44"
  op: "Assign"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_4/kernel/Adam"
  input: "debiased_classifier/save/RestoreV2:44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_4/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/save/Assign_45"
  op: "Assign"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_4/kernel/Adam_1"
  input: "debiased_classifier/save/RestoreV2:45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_4/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/save/Assign_46"
  op: "Assign"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_5/bias/Adam"
  input: "debiased_classifier/save/RestoreV2:46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_5/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/save/Assign_47"
  op: "Assign"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_5/bias/Adam_1"
  input: "debiased_classifier/save/RestoreV2:47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_5/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/save/Assign_48"
  op: "Assign"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_5/kernel/Adam"
  input: "debiased_classifier/save/RestoreV2:48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_5/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/save/Assign_49"
  op: "Assign"
  input: "debiased_classifier/debiased_classifier/classifier_model/linear_5/kernel/Adam_1"
  input: "debiased_classifier/save/RestoreV2:49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@debiased_classifier/classifier_model/linear_5/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "debiased_classifier/save/restore_all"
  op: "NoOp"
  input: "^debiased_classifier/save/Assign"
  input: "^debiased_classifier/save/Assign_1"
  input: "^debiased_classifier/save/Assign_10"
  input: "^debiased_classifier/save/Assign_11"
  input: "^debiased_classifier/save/Assign_12"
  input: "^debiased_classifier/save/Assign_13"
  input: "^debiased_classifier/save/Assign_14"
  input: "^debiased_classifier/save/Assign_15"
  input: "^debiased_classifier/save/Assign_16"
  input: "^debiased_classifier/save/Assign_17"
  input: "^debiased_classifier/save/Assign_18"
  input: "^debiased_classifier/save/Assign_19"
  input: "^debiased_classifier/save/Assign_2"
  input: "^debiased_classifier/save/Assign_20"
  input: "^debiased_classifier/save/Assign_21"
  input: "^debiased_classifier/save/Assign_22"
  input: "^debiased_classifier/save/Assign_23"
  input: "^debiased_classifier/save/Assign_24"
  input: "^debiased_classifier/save/Assign_25"
  input: "^debiased_classifier/save/Assign_26"
  input: "^debiased_classifier/save/Assign_27"
  input: "^debiased_classifier/save/Assign_28"
  input: "^debiased_classifier/save/Assign_29"
  input: "^debiased_classifier/save/Assign_3"
  input: "^debiased_classifier/save/Assign_30"
  input: "^debiased_classifier/save/Assign_31"
  input: "^debiased_classifier/save/Assign_32"
  input: "^debiased_classifier/save/Assign_33"
  input: "^debiased_classifier/save/Assign_34"
  input: "^debiased_classifier/save/Assign_35"
  input: "^debiased_classifier/save/Assign_36"
  input: "^debiased_classifier/save/Assign_37"
  input: "^debiased_classifier/save/Assign_38"
  input: "^debiased_classifier/save/Assign_39"
  input: "^debiased_classifier/save/Assign_4"
  input: "^debiased_classifier/save/Assign_40"
  input: "^debiased_classifier/save/Assign_41"
  input: "^debiased_classifier/save/Assign_42"
  input: "^debiased_classifier/save/Assign_43"
  input: "^debiased_classifier/save/Assign_44"
  input: "^debiased_classifier/save/Assign_45"
  input: "^debiased_classifier/save/Assign_46"
  input: "^debiased_classifier/save/Assign_47"
  input: "^debiased_classifier/save/Assign_48"
  input: "^debiased_classifier/save/Assign_49"
  input: "^debiased_classifier/save/Assign_5"
  input: "^debiased_classifier/save/Assign_6"
  input: "^debiased_classifier/save/Assign_7"
  input: "^debiased_classifier/save/Assign_8"
  input: "^debiased_classifier/save/Assign_9"
}
versions {
  producer: 134
}
